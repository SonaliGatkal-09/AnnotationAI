{"version":3,"file":"2789.js","mappings":";;;;;;;;;;;;;;;;;AAEM,SAAUA,QAAQA,CAACC,OAAgB;EACvC,OAAOC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,OAAO,CAAC,KAAK,iBAAiB;AACtE;AAEM,SAAUK,QAAQA,CACtBL,OAAgB;EAEhB,OAAOD,QAAQ,CAACC,OAAO,CAAC,IAAIM,KAAK,CAACC,OAAO,CAACP,OAAO,CAAC;AACpD;SAEgBQ,SAASA,GAAA;AACvB,SAAO,CAAC,EACN,OAAOC,MAAM,KAAK,WAAW,IAC7BA,MAAM,CAACC,QAAQ,IACfD,MAAM,CAACC,QAAQ,CAACC,aAAa,CAC9B;AACH;AAEgB,SAAAC,eAAeA,CAC7BC,QAAiC,EACjCC,QAAiC;AAEjC,QAAMC,YAAY,GAAGd,MAAM,CAACe,IAAI,CAACH,QAAQ,CAAC;AAC1C,QAAMI,YAAY,GAAGhB,MAAM,CAACe,IAAI,CAACF,QAAQ,CAAC;EAE1C,IAAIC,YAAY,CAACG,MAAM,KAAKD,YAAY,CAACC,MAAM,EAAE,OAAO,KAAK;AAE7D,QAAMC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACpB,MAAM,CAACe,IAAI,CAACH,QAAQ,CAACS,WAAW,IAAI,EAAE,CAAC,CAAC;AAC5E,QAAMC,YAAY,GAAGH,IAAI,CAACC,SAAS,CAACpB,MAAM,CAACe,IAAI,CAACF,QAAQ,CAACQ,WAAW,IAAI,EAAE,CAAC,CAAC;AAE5E,MAAIH,YAAY,KAAKI,YAAY,EAAE,OAAO,KAAK;AAE/C,SAAOR,YAAY,CAACS,KAAK,CAAEC,GAAG,IAAI;AAChC,UAAMC,MAAM,GAAGb,QAAQ,CAACY,GAAG,CAAC;AAC5B,UAAME,MAAM,GAAGb,QAAQ,CAACW,GAAG,CAAC;AAC5B,QAAI,OAAOC,MAAM,KAAK,UAAU,EAAE,OAAO,CAAGA,EAAAA,MAAM,CAAE,MAAK,CAAGC,EAAAA,MAAM,CAAE;AACpE,QAAI,CAACtB,QAAQ,CAACqB,MAAM,CAAC,IAAI,CAACrB,QAAQ,CAACsB,MAAM,CAAC,EAAE,OAAOD,MAAM,KAAKC,MAAM;AACpE,WAAOf,eAAe,CAACc,MAAM,EAAEC,MAAM,CAAC;AACxC,GAAC,CAAC;AACJ;AAEM,SAAUC,yBAAyBA,CACvCC,OAA0B;AAE1B,SAAOA,OAAO,CACXC,MAAM,EAAE,CACRC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAC1CC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC;AACpC;AAEgB,SAAAC,eAAeA,CAC7BC,QAA2B,EAC3BC,QAA2B;EAE3B,IAAID,QAAQ,CAACrB,MAAM,KAAKsB,QAAQ,CAACtB,MAAM,EAAE,OAAO,KAAK;AAErD,QAAML,QAAQ,GAAGe,yBAAyB,CAACW,QAAQ,CAAC;AACpD,QAAMzB,QAAQ,GAAGc,yBAAyB,CAACY,QAAQ,CAAC;EAEpD,OAAO3B,QAAQ,CAACW,KAAK,CAAC,CAACiB,OAAO,EAAEC,KAAK,KAAI;AACvC,UAAMC,OAAO,GAAG7B,QAAQ,CAAC4B,KAAK,CAAC;AAC/B,WAAO9B,eAAe,CAAC6B,OAAO,EAAEE,OAAO,CAAC;AAC1C,GAAC,CAAC;AACJ;;;;;AC7DM,SAAUC,QAAQA,CAAC5C,OAAgB;EACvC,OAAO,OAAOA,OAAO,KAAK,QAAQ;AACpC;AAEM,SAAU6C,QAAQA,CAAC7C,OAAgB;EACvC,OAAO,OAAOA,OAAO,KAAK,QAAQ;AACpC;AAEM,SAAU8C,SAASA,CAAC9C,OAAgB;EACxC,OAAO,OAAOA,OAAO,KAAK,SAAS;AACrC;AAEM,SAAUD,2BAAQA,CAACC,OAAgB;EACvC,OAAOC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,OAAO,CAAC,KAAK,iBAAiB;AACtE;AAEM,SAAU+C,OAAOA,CAACC,CAAS;AAC/B,SAAOC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAC;AACpB;AAEM,SAAUG,QAAQA,CAACH,CAAS;AAChC,SAAOC,IAAI,CAACG,IAAI,CAACJ,CAAC,CAAC;AACrB;AAEgB,SAAAK,QAAQA,CAAC1B,MAAc,EAAED,MAAc;AACrD,SAAOqB,OAAO,CAACpB,MAAM,GAAGD,MAAM,CAAC;AACjC;AAEgB,SAAA4B,SAASA,CAAC3B,MAAc,EAAED,MAAc;EACtD,IAAIC,MAAM,KAAK,CAAC,IAAID,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;EAC1C,IAAIqB,OAAO,CAACpB,MAAM,CAAC,IAAIoB,OAAO,CAACrB,MAAM,CAAC,EAAE,OAAO,CAAC;AAChD,QAAM6B,IAAI,GAAGF,QAAQ,CAACN,OAAO,CAACpB,MAAM,CAAC,EAAEoB,OAAO,CAACrB,MAAM,CAAC,CAAC;AACvD,SAAOqB,OAAO,CAACQ,IAAI,GAAG5B,MAAM,CAAC;AAC/B;AAEM,SAAU6B,SAASA,CAAOC,KAAa;EAC3C,OAAOC,UAAU,CAACD,KAAK,CAAC,CAACtB,GAAG,CAACwB,MAAM,CAAC;AACtC;AAEM,SAAUC,SAASA,CAAOH,KAAa;AAC3C,SAAOA,KAAK,CAACI,cAAc,CAACJ,KAAK,CAAC,CAAC;AACrC;AAEM,SAAUI,cAAcA,CAAOJ,KAAa;EAChD,OAAOR,IAAI,CAACa,GAAG,CAAC,CAAC,EAAEL,KAAK,CAACvC,MAAM,GAAG,CAAC,CAAC;AACtC;AAEgB,SAAA6C,gBAAgBA,CAAON,KAAa,EAAEf,KAAa;AACjE,SAAOA,KAAK,KAAKmB,cAAc,CAACJ,KAAK,CAAC;AACxC;SAEgBO,eAAeA,CAAChB,CAAS,EAAEiB,UAAkB,CAAC;AAC5D,SAAO3D,KAAK,CAAC4D,IAAI,CAAC5D,KAAK,CAAC0C,CAAC,CAAC,EAAE,CAACmB,CAAC,EAAEC,CAAC,KAAKH,OAAO,GAAGG,CAAC,CAAC;AACpD;AAEM,SAAUV,UAAUA,CAAsBW,MAAY;AAC1D,SAAOpE,MAAM,CAACe,IAAI,CAACqD,MAAM,CAAC;AAC5B;AAEgB,SAAAC,gBAAgBA,CAC9BC,OAAgC,EAChCC,OAAgC;AAEhC,SAAO,CAACD,OAAO,EAAEC,OAAO,CAAC,CAACC,MAAM,CAAC,CAACC,aAAa,EAAEC,aAAa,KAAI;AAChEjB,IAAAA,UAAU,CAACiB,aAAa,CAAC,CAACC,OAAO,CAAEnD,GAAG,IAAI;AACxC,YAAMC,MAAM,GAAGgD,aAAa,CAACjD,GAAG,CAAC;AACjC,YAAME,MAAM,GAAGgD,aAAa,CAAClD,GAAG,CAAC;MACjC,MAAMoD,UAAU,GAAG9E,2BAAQ,CAAC2B,MAAM,CAAC,IAAI3B,2BAAQ,CAAC4B,MAAM,CAAC;AAEvD+C,MAAAA,aAAa,CAACjD,GAAG,CAAC,GAAGoD,UAAU,GAC3BP,gBAAgB,CAAC5C,MAAM,EAAEC,MAAM,CAAC,GAChCA,MAAM;AACZ,KAAC,CAAC;AACF,WAAO+C,aAAa;GACrB,EAAE,EAAE,CAAC;AACR;AAEgB,SAAAI,YAAYA,CAC1BC,GAAqB,EACrBC,WAAuB;EAEvB,OACE,OAAOA,WAAW,CAACC,UAAU,KAAK,WAAW,IAC7CF,GAAG,YAAYC,WAAW,CAACC,UAAU;AAEzC;;AC7EgB,SAAAC,SAASA,CACvBC,KAA0B,EAC1BC,QAAgB;AAEhB,QAAMC,UAAU,GAAG;IAAEC,KAAK;IAAEC,MAAM;AAAEC,IAAAA,GAAAA;GAAK;EAEzC,SAASF,KAAKA,GAAA;AACZ,WAAO,CAAC;AACV;EAEA,SAASC,MAAMA,CAACvC,CAAS;AACvB,WAAOwC,GAAG,CAACxC,CAAC,CAAC,GAAG,CAAC;AACnB;EAEA,SAASwC,GAAGA,CAACxC,CAAS;IACpB,OAAOoC,QAAQ,GAAGpC,CAAC;AACrB;AAEA,WAASyC,OAAOA,CAACzC,CAAS,EAAEN,KAAa;AACvC,QAAIG,QAAQ,CAACsC,KAAK,CAAC,EAAE,OAAOE,UAAU,CAACF,KAAK,CAAC,CAACnC,CAAC,CAAC;AAChD,WAAOmC,KAAK,CAACC,QAAQ,EAAEpC,CAAC,EAAEN,KAAK,CAAC;AAClC;AAEA,QAAMgD,IAAI,GAAkB;AAC1BD,IAAAA,OAAAA;GACD;AACD,SAAOC,IAAI;AACb;;SCxBgBC,UAAUA,GAAA;EACxB,IAAIC,SAAS,GAAuB,EAAE;EAEtC,SAASC,GAAGA,CACVC,IAAiB,EACjBC,IAAmB,EACnBC,OAAyB,EACzB3D,OAA4B;AAAE4D,IAAAA,OAAO,EAAE;AAAM;AAE7C,QAAIC,cAAgC;IAEpC,IAAI,kBAAkB,IAAIJ,IAAI,EAAE;MAC9BA,IAAI,CAACK,gBAAgB,CAACJ,IAAI,EAAEC,OAAO,EAAE3D,OAAO,CAAC;AAC7C6D,MAAAA,cAAc,GAAGA,MAAMJ,IAAI,CAACM,mBAAmB,CAACL,IAAI,EAAEC,OAAO,EAAE3D,OAAO,CAAC;AACzE,KAAC,MAAM;MACL,MAAMgE,oBAAoB,GAAmBP,IAAI;AACjDO,MAAAA,oBAAoB,CAACC,WAAW,CAACN,OAAO,CAAC;MACzCE,cAAc,GAAGA,MAAMG,oBAAoB,CAACH,cAAc,CAACF,OAAO,CAAC;AACrE;AAEAJ,IAAAA,SAAS,CAACW,IAAI,CAACL,cAAc,CAAC;AAC9B,WAAOR,IAAI;AACb;EAEA,SAASc,KAAKA,GAAA;IACZZ,SAAS,GAAGA,SAAS,CAACa,MAAM,CAAEC,MAAM,IAAKA,MAAM,EAAE,CAAC;AACpD;AAEA,QAAMhB,IAAI,GAAmB;IAC3BG,GAAG;AACHW,IAAAA,KAAAA;GACD;AACD,SAAOd,IAAI;AACb;;AC1BM,SAAUiB,UAAUA,CACxBC,aAAuB,EACvB5B,WAAuB,EACvB6B,MAAkC,EAClCC,MAAmC;AAEnC,QAAMC,sBAAsB,GAAGpB,UAAU,EAAE;AAC3C,QAAMqB,QAAQ,GAAG,IAAI,GAAG,EAAE;EAC1B,IAAIC,aAAa,GAAkB,IAAI;EACvC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,cAAc,GAAG,CAAC;EAEtB,SAASC,IAAIA,GAAA;AACXL,IAAAA,sBAAsB,CAAClB,GAAG,CAACe,aAAa,EAAE,kBAAkB,EAAE,MAAK;AACjE,UAAIA,aAAa,CAACS,MAAM,EAAEC,KAAK,EAAE;AACnC,KAAC,CAAC;AACJ;EAEA,SAASC,OAAOA,GAAA;AACdC,IAAAA,IAAI,EAAE;IACNT,sBAAsB,CAACP,KAAK,EAAE;AAChC;EAEA,SAASiB,OAAOA,CAACC,SAA8B;IAC7C,IAAI,CAACP,cAAc,EAAE;AACrB,QAAI,CAACF,aAAa,EAAEA,aAAa,GAAGS,SAAS;AAE7C,UAAMC,OAAO,GAAGD,SAAS,GAAGT,aAAa;AACzCA,IAAAA,aAAa,GAAGS,SAAS;AACzBR,IAAAA,GAAG,IAAIS,OAAO;IAEd,OAAOT,GAAG,IAAIF,QAAQ,EAAE;MACtBH,MAAM,CAACG,QAAQ,CAAC;AAChBE,MAAAA,GAAG,IAAIF,QAAQ;AACjB;AAEA,UAAMY,SAAS,GAAGV,GAAG,GAAGF,QAAQ;IAChCF,MAAM,CAACc,SAAS,CAAC;AAEjB,QAAIT,cAAc,EAAEnC,WAAW,CAAC6C,qBAAqB,CAACJ,OAAO,CAAC;AAChE;EAEA,SAASnC,KAAKA,GAAA;AACZ,QAAI6B,cAAc,EAAE;AAEpBA,IAAAA,cAAc,GAAGnC,WAAW,CAAC6C,qBAAqB,CAACJ,OAAO,CAAC;AAC7D;EAEA,SAASD,IAAIA,GAAA;AACXxC,IAAAA,WAAW,CAAC8C,oBAAoB,CAACX,cAAc,CAAC;AAChDF,IAAAA,aAAa,GAAG,IAAI;AACpBC,IAAAA,GAAG,GAAG,CAAC;AACPC,IAAAA,cAAc,GAAG,CAAC;AACpB;EAEA,SAASG,KAAKA,GAAA;AACZL,IAAAA,aAAa,GAAG,IAAI;AACpBC,IAAAA,GAAG,GAAG,CAAC;AACT;AAEA,QAAMxB,IAAI,GAAmB;IAC3B0B,IAAI;IACJG,OAAO;IACPjC,KAAK;IACLkC,IAAI;AACJX,IAAAA,MAAM,EAAEA,MAAMA,MAAM,CAACG,QAAQ,CAAC;AAC9BF,IAAAA,MAAAA;GACD;AACD,SAAOpB,IAAI;AACb;;AC5EgB,SAAAqC,IAAIA,CAClBC,IAAoB,EACpBC,gBAAyC;AAEzC,QAAMC,aAAa,GAAGD,gBAAgB,KAAK,KAAK;AAChD,QAAME,UAAU,GAAGH,IAAI,KAAK,GAAG;AAC/B,QAAMI,MAAM,GAAGD,UAAU,GAAG,GAAG,GAAG,GAAG;AACrC,QAAME,KAAK,GAAGF,UAAU,GAAG,GAAG,GAAG,GAAG;EACpC,MAAM/E,IAAI,GAAG,CAAC+E,UAAU,IAAID,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;AAClD,QAAMI,SAAS,GAAGC,YAAY,EAAE;AAChC,QAAMC,OAAO,GAAGC,UAAU,EAAE;EAE5B,SAASC,WAAWA,CAACC,QAAsB;IACzC,MAAM;MAAEC,MAAM;AAAEC,MAAAA,KAAAA;AAAO,QAAGF,QAAQ;AAClC,WAAOR,UAAU,GAAGS,MAAM,GAAGC,KAAK;AACpC;EAEA,SAASN,YAAYA,GAAA;IACnB,IAAIJ,UAAU,EAAE,OAAO,KAAK;AAC5B,WAAOD,aAAa,GAAG,OAAO,GAAG,MAAM;AACzC;EAEA,SAASO,UAAUA,GAAA;IACjB,IAAIN,UAAU,EAAE,OAAO,QAAQ;AAC/B,WAAOD,aAAa,GAAG,MAAM,GAAG,OAAO;AACzC;EAEA,SAASY,SAASA,CAAC9F,CAAS;IAC1B,OAAOA,CAAC,GAAGI,IAAI;AACjB;AAEA,QAAMsC,IAAI,GAAa;IACrB0C,MAAM;IACNC,KAAK;IACLC,SAAS;IACTE,OAAO;IACPE,WAAW;AACXI,IAAAA,SAAAA;GACD;AACD,SAAOpD,IAAI;AACb;;SC1CgBqD,KAAKA,CAACC,MAAc,CAAC,EAAElF,MAAc,CAAC;AACpD,QAAM5C,MAAM,GAAG6B,OAAO,CAACiG,GAAG,GAAGlF,GAAG,CAAC;EAEjC,SAASmF,UAAUA,CAACjG,CAAS;IAC3B,OAAOA,CAAC,GAAGgG,GAAG;AAChB;EAEA,SAASE,UAAUA,CAAClG,CAAS;IAC3B,OAAOA,CAAC,GAAGc,GAAG;AAChB;EAEA,SAASqF,UAAUA,CAACnG,CAAS;IAC3B,OAAOiG,UAAU,CAACjG,CAAC,CAAC,IAAIkG,UAAU,CAAClG,CAAC,CAAC;AACvC;EAEA,SAASoG,SAASA,CAACpG,CAAS;AAC1B,QAAI,CAACmG,UAAU,CAACnG,CAAC,CAAC,EAAE,OAAOA,CAAC;AAC5B,WAAOiG,UAAU,CAACjG,CAAC,CAAC,GAAGgG,GAAG,GAAGlF,GAAG;AAClC;EAEA,SAASuF,YAAYA,CAACrG,CAAS;AAC7B,QAAI,CAAC9B,MAAM,EAAE,OAAO8B,CAAC;AACrB,WAAOA,CAAC,GAAG9B,MAAM,GAAG+B,IAAI,CAACqG,IAAI,CAAC,CAACtG,CAAC,GAAGc,GAAG,IAAI5C,MAAM,CAAC;AACnD;AAEA,QAAMwE,IAAI,GAAc;IACtBxE,MAAM;IACN4C,GAAG;IACHkF,GAAG;IACHI,SAAS;IACTD,UAAU;IACVD,UAAU;IACVD,UAAU;AACVI,IAAAA,YAAAA;GACD;AACD,SAAO3D,IAAI;AACb;;SCvCgB6D,OAAOA,CACrBzF,GAAW,EACXwB,KAAa,EACbkE,IAAa;EAEb,MAAM;AAAEJ,IAAAA,SAAAA;AAAS,GAAE,GAAGL,KAAK,CAAC,CAAC,EAAEjF,GAAG,CAAC;AACnC,QAAM2F,OAAO,GAAG3F,GAAG,GAAG,CAAC;AACvB,MAAI4F,OAAO,GAAGC,WAAW,CAACrE,KAAK,CAAC;EAEhC,SAASqE,WAAWA,CAAC3G,CAAS;AAC5B,WAAO,CAACwG,IAAI,GAAGJ,SAAS,CAACpG,CAAC,CAAC,GAAGD,OAAO,CAAC,CAAC0G,OAAO,GAAGzG,CAAC,IAAIyG,OAAO,CAAC;AAChE;EAEA,SAASG,GAAGA,GAAA;AACV,WAAOF,OAAO;AAChB;EAEA,SAASG,GAAGA,CAAC7G,CAAS;AACpB0G,IAAAA,OAAO,GAAGC,WAAW,CAAC3G,CAAC,CAAC;AACxB,WAAO0C,IAAI;AACb;EAEA,SAASG,GAAGA,CAAC7C,CAAS;IACpB,OAAO8G,KAAK,EAAE,CAACD,GAAG,CAACD,GAAG,EAAE,GAAG5G,CAAC,CAAC;AAC/B;EAEA,SAAS8G,KAAKA,GAAA;IACZ,OAAOP,OAAO,CAACzF,GAAG,EAAE8F,GAAG,EAAE,EAAEJ,IAAI,CAAC;AAClC;AAEA,QAAM9D,IAAI,GAAgB;IACxBkE,GAAG;IACHC,GAAG;IACHhE,GAAG;AACHiE,IAAAA,KAAAA;GACD;AACD,SAAOpE,IAAI;AACb;;SCXgBqE,WAAWA,CACzB/B,IAAc,EACdgC,QAAqB,EACrBpD,aAAuB,EACvB5B,WAAuB,EACvBiF,MAAoB,EACpBC,WAA4B,EAC5BC,QAAsB,EACtBC,SAAyB,EACzBC,QAAsB,EACtBC,UAA0B,EAC1BC,YAA8B,EAC9B7H,KAAkB,EAClB8H,YAA8B,EAC9BC,aAAgC,EAChCC,QAAiB,EACjBC,aAAqB,EACrBC,SAAkB,EAClBC,YAAoB,EACpBC,SAAgC;EAEhC,MAAM;AAAEzC,IAAAA,KAAK,EAAE0C,SAAS;AAAEjC,IAAAA,SAAAA;AAAS,GAAE,GAAGd,IAAI;EAC5C,MAAMgD,UAAU,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC;AAClD,QAAMC,eAAe,GAAG;AAAEhF,IAAAA,OAAO,EAAE;GAAO;AAC1C,QAAMiF,UAAU,GAAGvF,UAAU,EAAE;AAC/B,QAAMwF,UAAU,GAAGxF,UAAU,EAAE;AAC/B,QAAMyF,iBAAiB,GAAGrC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAACK,SAAS,CAACqB,aAAa,CAAChF,OAAO,CAAC,EAAE,CAAC,CAAC;AAC7E,QAAM4F,cAAc,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE;GAAK;AACjD,QAAMC,cAAc,GAAG;AAAEF,IAAAA,KAAK,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE;GAAK;AACjD,QAAME,SAAS,GAAGf,QAAQ,GAAG,EAAE,GAAG,EAAE;EAEpC,IAAIgB,QAAQ,GAAG,KAAK;EACpB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,aAAa,GAAG,KAAK;EACzB,IAAIC,aAAa,GAAG,KAAK;EACzB,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,OAAO,GAAG,KAAK;EAEnB,SAAS5E,IAAIA,CAAC6E,QAA2B;IACvC,IAAI,CAACnB,SAAS,EAAE;IAEhB,SAASoB,aAAaA,CAACnH,GAAqB;AAC1C,UAAIjC,SAAS,CAACgI,SAAS,CAAC,IAAIA,SAAS,CAACmB,QAAQ,EAAElH,GAAG,CAAC,EAAEoH,IAAI,CAACpH,GAAG,CAAC;AACjE;IAEA,MAAMe,IAAI,GAAGkE,QAAQ;AACrBkB,IAAAA,UAAU,CACPrF,GAAG,CAACC,IAAI,EAAE,WAAW,EAAGf,GAAG,IAAKA,GAAG,CAACqH,cAAc,EAAE,EAAEnB,eAAe,CAAC,CACtEpF,GAAG,CAACC,IAAI,EAAE,WAAW,EAAE,MAAMuG,SAAS,EAAEpB,eAAe,CAAC,CACxDpF,GAAG,CAACC,IAAI,EAAE,UAAU,EAAE,MAAMuG,SAAS,CAAC,CACtCxG,GAAG,CAACC,IAAI,EAAE,YAAY,EAAEoG,aAAa,CAAC,CACtCrG,GAAG,CAACC,IAAI,EAAE,WAAW,EAAEoG,aAAa,CAAC,CACrCrG,GAAG,CAACC,IAAI,EAAE,aAAa,EAAEwG,EAAE,CAAC,CAC5BzG,GAAG,CAACC,IAAI,EAAE,aAAa,EAAEwG,EAAE,CAAC,CAC5BzG,GAAG,CAACC,IAAI,EAAE,OAAO,EAAEyG,KAAK,EAAE,IAAI,CAAC;AACpC;EAEA,SAAShF,OAAOA,GAAA;IACd2D,UAAU,CAAC1E,KAAK,EAAE;IAClB2E,UAAU,CAAC3E,KAAK,EAAE;AACpB;EAEA,SAASgG,aAAaA,GAAA;AACpB,UAAM1G,IAAI,GAAGkG,OAAO,GAAGpF,aAAa,GAAGoD,QAAQ;AAC/CmB,IAAAA,UAAU,CACPtF,GAAG,CAACC,IAAI,EAAE,WAAW,EAAE2G,IAAI,EAAExB,eAAe,CAAC,CAC7CpF,GAAG,CAACC,IAAI,EAAE,UAAU,EAAEwG,EAAE,CAAC,CACzBzG,GAAG,CAACC,IAAI,EAAE,WAAW,EAAE2G,IAAI,EAAExB,eAAe,CAAC,CAC7CpF,GAAG,CAACC,IAAI,EAAE,SAAS,EAAEwG,EAAE,CAAC;AAC7B;EAEA,SAASI,WAAWA,CAAC5G,IAAa;AAChC,UAAM6G,QAAQ,GAAG7G,IAAI,CAAC6G,QAAQ,IAAI,EAAE;AACpC,WAAO3B,UAAU,CAAC4B,QAAQ,CAACD,QAAQ,CAAC;AACtC;EAEA,SAASE,UAAUA,GAAA;AACjB,UAAMC,KAAK,GAAGpC,QAAQ,GAAGc,cAAc,GAAGH,cAAc;AACxD,UAAMtF,IAAI,GAAGiG,OAAO,GAAG,OAAO,GAAG,OAAO;IACxC,OAAOc,KAAK,CAAC/G,IAAI,CAAC;AACpB;AAEA,WAASgH,YAAYA,CAACC,KAAa,EAAEC,aAAsB;AACzD,UAAMC,IAAI,GAAGxK,KAAK,CAACmD,GAAG,CAAC1C,QAAQ,CAAC6J,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,UAAMG,SAAS,GAAG5C,YAAY,CAAC6C,UAAU,CAACJ,KAAK,EAAE,CAACtC,QAAQ,CAAC,CAAC2C,QAAQ;IAEpE,IAAI3C,QAAQ,IAAI3H,OAAO,CAACiK,KAAK,CAAC,GAAG5B,iBAAiB,EAAE,OAAO+B,SAAS;AACpE,QAAIvC,SAAS,IAAIqC,aAAa,EAAE,OAAOE,SAAS,GAAG,GAAG;AAEtD,WAAO5C,YAAY,CAAC+C,OAAO,CAACJ,IAAI,CAACtD,GAAG,EAAE,EAAE,CAAC,CAAC,CAACyD,QAAQ;AACrD;EAEA,SAASlB,IAAIA,CAACpH,GAAqB;AACjC,UAAMwI,UAAU,GAAGzI,YAAY,CAACC,GAAG,EAAEC,WAAW,CAAC;AACjDgH,IAAAA,OAAO,GAAGuB,UAAU;IACpBxB,YAAY,GAAGrB,QAAQ,IAAI6C,UAAU,IAAI,CAACxI,GAAG,CAACyI,OAAO,IAAI9B,QAAQ;AACjEA,IAAAA,QAAQ,GAAGrI,QAAQ,CAAC4G,MAAM,CAACL,GAAG,EAAE,EAAEO,QAAQ,CAACP,GAAG,EAAE,CAAC,IAAI,CAAC;AAEtD,QAAI2D,UAAU,IAAIxI,GAAG,CAAC0I,MAAM,KAAK,CAAC,EAAE;AACpC,QAAIf,WAAW,CAAC3H,GAAG,CAACkF,MAAiB,CAAC,EAAE;AAExC4B,IAAAA,aAAa,GAAG,IAAI;AACpB3B,IAAAA,WAAW,CAACwD,WAAW,CAAC3I,GAAG,CAAC;IAC5BuF,UAAU,CAACqD,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;AACxC3D,IAAAA,MAAM,CAACJ,GAAG,CAACM,QAAQ,CAAC;AACpBqC,IAAAA,aAAa,EAAE;AACfb,IAAAA,WAAW,GAAGzB,WAAW,CAAC2D,SAAS,CAAC9I,GAAG,CAAC;IACxC6G,UAAU,GAAG1B,WAAW,CAAC2D,SAAS,CAAC9I,GAAG,EAAEgG,SAAS,CAAC;AAClDP,IAAAA,YAAY,CAACsD,IAAI,CAAC,aAAa,CAAC;AAClC;EAEA,SAASrB,IAAIA,CAAC1H,GAAqB;IACjC,MAAMgJ,UAAU,GAAG,CAACjJ,YAAY,CAACC,GAAG,EAAEC,WAAW,CAAC;AAClD,QAAI+I,UAAU,IAAIhJ,GAAG,CAACiJ,OAAO,CAAC9M,MAAM,IAAI,CAAC,EAAE,OAAOoL,EAAE,CAACvH,GAAG,CAAC;AAEzD,UAAMkJ,UAAU,GAAG/D,WAAW,CAAC2D,SAAS,CAAC9I,GAAG,CAAC;IAC7C,MAAMmJ,SAAS,GAAGhE,WAAW,CAAC2D,SAAS,CAAC9I,GAAG,EAAEgG,SAAS,CAAC;AACvD,UAAMoD,UAAU,GAAG9K,QAAQ,CAAC4K,UAAU,EAAEtC,WAAW,CAAC;AACpD,UAAMyC,SAAS,GAAG/K,QAAQ,CAAC6K,SAAS,EAAEtC,UAAU,CAAC;AAEjD,QAAI,CAACE,aAAa,IAAI,CAACE,OAAO,EAAE;MAC9B,IAAI,CAACjH,GAAG,CAACsJ,UAAU,EAAE,OAAO/B,EAAE,CAACvH,GAAG,CAAC;MACnC+G,aAAa,GAAGqC,UAAU,GAAGC,SAAS;AACtC,UAAI,CAACtC,aAAa,EAAE,OAAOQ,EAAE,CAACvH,GAAG,CAAC;AACpC;AACA,UAAMxB,IAAI,GAAG2G,WAAW,CAACoE,WAAW,CAACvJ,GAAG,CAAC;AACzC,QAAIoJ,UAAU,GAAGxD,aAAa,EAAEoB,YAAY,GAAG,IAAI;IAEnDzB,UAAU,CAACqD,WAAW,CAAC,GAAG,CAAC,CAACC,WAAW,CAAC,IAAI,CAAC;IAC7CxD,SAAS,CAAC9E,KAAK,EAAE;AACjB2E,IAAAA,MAAM,CAACpE,GAAG,CAACiD,SAAS,CAACvF,IAAI,CAAC,CAAC;IAC3BwB,GAAG,CAACqH,cAAc,EAAE;AACtB;EAEA,SAASE,EAAEA,CAACvH,GAAqB;IAC/B,MAAMwJ,eAAe,GAAGhE,YAAY,CAAC6C,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC;IACzD,MAAMH,aAAa,GAAGsB,eAAe,CAAC7L,KAAK,KAAKA,KAAK,CAACkH,GAAG,EAAE;IAC3D,MAAM4E,QAAQ,GAAGtE,WAAW,CAACuE,SAAS,CAAC1J,GAAG,CAAC,GAAG8H,UAAU,EAAE;IAC1D,MAAMG,KAAK,GAAGD,YAAY,CAACjE,SAAS,CAAC0F,QAAQ,CAAC,EAAEvB,aAAa,CAAC;AAC9D,UAAMyB,WAAW,GAAGpL,SAAS,CAACkL,QAAQ,EAAExB,KAAK,CAAC;AAC9C,UAAM2B,KAAK,GAAGlD,SAAS,GAAG,EAAE,GAAGiD,WAAW;AAC1C,UAAME,QAAQ,GAAG/D,YAAY,GAAG6D,WAAW,GAAG,EAAE;AAEhD5C,IAAAA,aAAa,GAAG,KAAK;AACrBD,IAAAA,aAAa,GAAG,KAAK;IACrBV,UAAU,CAAC3E,KAAK,EAAE;IAClB8D,UAAU,CAACsD,WAAW,CAACe,KAAK,CAAC,CAAChB,WAAW,CAACiB,QAAQ,CAAC;AACnDvE,IAAAA,QAAQ,CAACgD,QAAQ,CAACL,KAAK,EAAE,CAACtC,QAAQ,CAAC;AACnCsB,IAAAA,OAAO,GAAG,KAAK;AACfxB,IAAAA,YAAY,CAACsD,IAAI,CAAC,WAAW,CAAC;AAChC;EAEA,SAASvB,KAAKA,CAACxH,GAAe;AAC5B,QAAIgH,YAAY,EAAE;MAChBhH,GAAG,CAAC8J,eAAe,EAAE;MACrB9J,GAAG,CAACqH,cAAc,EAAE;AACpBL,MAAAA,YAAY,GAAG,KAAK;AACtB;AACF;EAEA,SAAS2B,WAAWA,GAAA;AAClB,WAAO7B,aAAa;AACtB;AAEA,QAAMnG,IAAI,GAAoB;IAC5B0B,IAAI;IACJG,OAAO;AACPmG,IAAAA,WAAAA;GACD;AACD,SAAOhI,IAAI;AACb;;AClMgB,SAAAoJ,WAAWA,CACzB9G,IAAc,EACdhD,WAAuB;EAEvB,MAAM+J,WAAW,GAAG,GAAG;AAEvB,MAAIC,UAA4B;AAChC,MAAIC,SAA2B;EAE/B,SAASC,QAAQA,CAACnK,GAAqB;IACrC,OAAOA,GAAG,CAAC2C,SAAS;AACtB;AAEA,WAASmG,SAASA,CAAC9I,GAAqB,EAAEoK,OAAwB;AAChE,UAAMC,QAAQ,GAAGD,OAAO,IAAInH,IAAI,CAACI,MAAM;IACvC,MAAMiH,KAAK,GAAqB,SAASD,QAAQ,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE;AACvE,WAAO,CAACtK,YAAY,CAACC,GAAG,EAAEC,WAAW,CAAC,GAAGD,GAAG,GAAGA,GAAG,CAACiJ,OAAO,CAAC,CAAC,CAAC,EAAEqB,KAAK,CAAC;AACvE;EAEA,SAAS3B,WAAWA,CAAC3I,GAAqB;AACxCiK,IAAAA,UAAU,GAAGjK,GAAG;AAChBkK,IAAAA,SAAS,GAAGlK,GAAG;IACf,OAAO8I,SAAS,CAAC9I,GAAG,CAAC;AACvB;EAEA,SAASuJ,WAAWA,CAACvJ,GAAqB;IACxC,MAAMxB,IAAI,GAAGsK,SAAS,CAAC9I,GAAG,CAAC,GAAG8I,SAAS,CAACoB,SAAS,CAAC;AAClD,UAAMK,OAAO,GAAGJ,QAAQ,CAACnK,GAAG,CAAC,GAAGmK,QAAQ,CAACF,UAAU,CAAC,GAAGD,WAAW;AAElEE,IAAAA,SAAS,GAAGlK,GAAG;AACf,QAAIuK,OAAO,EAAEN,UAAU,GAAGjK,GAAG;AAC7B,WAAOxB,IAAI;AACb;EAEA,SAASkL,SAASA,CAAC1J,GAAqB;AACtC,QAAI,CAACiK,UAAU,IAAI,CAACC,SAAS,EAAE,OAAO,CAAC;IACvC,MAAMM,QAAQ,GAAG1B,SAAS,CAACoB,SAAS,CAAC,GAAGpB,SAAS,CAACmB,UAAU,CAAC;IAC7D,MAAMQ,QAAQ,GAAGN,QAAQ,CAACnK,GAAG,CAAC,GAAGmK,QAAQ,CAACF,UAAU,CAAC;AACrD,UAAMM,OAAO,GAAGJ,QAAQ,CAACnK,GAAG,CAAC,GAAGmK,QAAQ,CAACD,SAAS,CAAC,GAAGF,WAAW;AACjE,UAAM/B,KAAK,GAAGuC,QAAQ,GAAGC,QAAQ;AACjC,UAAMC,OAAO,GAAGD,QAAQ,IAAI,CAACF,OAAO,IAAIvM,OAAO,CAACiK,KAAK,CAAC,GAAG,GAAG;AAE5D,WAAOyC,OAAO,GAAGzC,KAAK,GAAG,CAAC;AAC5B;AAEA,QAAMtH,IAAI,GAAoB;IAC5BgI,WAAW;IACXY,WAAW;IACXG,SAAS;AACTZ,IAAAA,SAAAA;GACD;AACD,SAAOnI,IAAI;AACb;;SCpDgBgK,SAASA,GAAA;EACvB,SAASjK,OAAOA,CAACK,IAAiB;IAChC,MAAM;MAAE6J,SAAS;MAAEC,UAAU;MAAEC,WAAW;AAAEC,MAAAA,YAAAA;AAAY,KAAE,GAAGhK,IAAI;AACjE,UAAMiK,MAAM,GAAiB;AAC3BC,MAAAA,GAAG,EAAEL,SAAS;MACdM,KAAK,EAAEL,UAAU,GAAGC,WAAW;MAC/BK,MAAM,EAAEP,SAAS,GAAGG,YAAY;AAChCK,MAAAA,IAAI,EAAEP,UAAU;AAChB/G,MAAAA,KAAK,EAAEgH,WAAW;AAClBjH,MAAAA,MAAM,EAAEkH,YAAAA;KACT;AAED,WAAOC,MAAM;AACf;AAEA,QAAMrK,IAAI,GAAkB;AAC1BD,IAAAA,OAAAA;GACD;AACD,SAAOC,IAAI;AACb;;AC5BM,SAAU0K,aAAaA,CAAChL,QAAgB;EAC5C,SAASK,OAAOA,CAACzC,CAAS;AACxB,WAAOoC,QAAQ,IAAIpC,CAAC,GAAG,GAAG,CAAC;AAC7B;AAEA,QAAM0C,IAAI,GAAsB;AAC9BD,IAAAA,OAAAA;GACD;AACD,SAAOC,IAAI;AACb;;ACKgB,SAAA2K,aAAaA,CAC3BC,SAAsB,EACtB9F,YAA8B,EAC9BxF,WAAuB,EACvBuL,MAAqB,EACrBvI,IAAc,EACdwI,WAAoC,EACpCC,SAAwB;EAExB,MAAMC,YAAY,GAAG,CAACJ,SAAS,CAAC,CAACxO,MAAM,CAACyO,MAAM,CAAC;AAC/C,MAAII,cAA8B;AAClC,MAAIC,aAAqB;EACzB,IAAIC,UAAU,GAAa,EAAE;EAC7B,IAAIC,SAAS,GAAG,KAAK;EAErB,SAASC,QAAQA,CAACjL,IAAiB;IACjC,OAAOkC,IAAI,CAACU,WAAW,CAAC+H,SAAS,CAAChL,OAAO,CAACK,IAAI,CAAC,CAAC;AAClD;EAEA,SAASsB,IAAIA,CAAC6E,QAA2B;IACvC,IAAI,CAACuE,WAAW,EAAE;AAElBI,IAAAA,aAAa,GAAGG,QAAQ,CAACT,SAAS,CAAC;AACnCO,IAAAA,UAAU,GAAGN,MAAM,CAACpO,GAAG,CAAC4O,QAAQ,CAAC;IAEjC,SAASC,eAAeA,CAACC,OAA8B;AACrD,WAAK,MAAMC,KAAK,IAAID,OAAO,EAAE;AAC3B,YAAIH,SAAS,EAAE;AAEf,cAAMK,WAAW,GAAGD,KAAK,CAACjH,MAAM,KAAKqG,SAAS;QAC9C,MAAMc,UAAU,GAAGb,MAAM,CAACc,OAAO,CAAcH,KAAK,CAACjH,MAAM,CAAC;QAC5D,MAAMqH,QAAQ,GAAGH,WAAW,GAAGP,aAAa,GAAGC,UAAU,CAACO,UAAU,CAAC;AACrE,cAAMG,OAAO,GAAGR,QAAQ,CAACI,WAAW,GAAGb,SAAS,GAAGC,MAAM,CAACa,UAAU,CAAC,CAAC;AACtE,cAAMI,QAAQ,GAAGzO,OAAO,CAACwO,OAAO,GAAGD,QAAQ,CAAC;QAE5C,IAAIE,QAAQ,IAAI,GAAG,EAAE;UACnBvF,QAAQ,CAACwF,MAAM,EAAE;AACjBjH,UAAAA,YAAY,CAACsD,IAAI,CAAC,QAAQ,CAAC;AAE3B;AACF;AACF;AACF;AAEA6C,IAAAA,cAAc,GAAG,IAAIe,cAAc,CAAET,OAAO,IAAI;MAC9C,IAAInO,SAAS,CAAC0N,WAAW,CAAC,IAAIA,WAAW,CAACvE,QAAQ,EAAEgF,OAAO,CAAC,EAAE;QAC5DD,eAAe,CAACC,OAAO,CAAC;AAC1B;AACF,KAAC,CAAC;IAEFjM,WAAW,CAAC6C,qBAAqB,CAAC,MAAK;MACrC6I,YAAY,CAAC9L,OAAO,CAAEkB,IAAI,IAAK6K,cAAc,CAACgB,OAAO,CAAC7L,IAAI,CAAC,CAAC;AAC9D,KAAC,CAAC;AACJ;EAEA,SAASyB,OAAOA,GAAA;AACduJ,IAAAA,SAAS,GAAG,IAAI;AAChB,QAAIH,cAAc,EAAEA,cAAc,CAACiB,UAAU,EAAE;AACjD;AAEA,QAAMlM,IAAI,GAAsB;IAC9B0B,IAAI;AACJG,IAAAA,OAAAA;GACD;AACD,SAAO7B,IAAI;AACb;;ACpEgB,SAAAmM,UAAUA,CACxB1H,QAAsB,EACtB2H,cAA4B,EAC5BC,gBAA8B,EAC9B9H,MAAoB,EACpB+H,YAAoB,EACpBnH,YAAoB;EAEpB,IAAIoH,YAAY,GAAG,CAAC;EACpB,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,cAAc,GAAGH,YAAY;EACjC,IAAII,cAAc,GAAGvH,YAAY;AACjC,MAAIwH,WAAW,GAAGlI,QAAQ,CAACP,GAAG,EAAE;EAChC,IAAI0I,mBAAmB,GAAG,CAAC;EAE3B,SAASC,IAAIA,CAACvL,QAAgB;AAC5B,UAAMwL,qBAAqB,GAAGxL,QAAQ,GAAG,IAAI;AAC7C,UAAMyL,QAAQ,GAAGN,cAAc,GAAGK,qBAAqB;AACvD,UAAMjP,IAAI,GAAG0G,MAAM,CAACL,GAAG,EAAE,GAAGO,QAAQ,CAACP,GAAG,EAAE;IAC1C,MAAM8I,SAAS,GAAG,CAACP,cAAc;IACjC,IAAIQ,aAAa,GAAG,CAAC;AAErB,QAAID,SAAS,EAAE;AACbT,MAAAA,YAAY,GAAG,CAAC;AAChBF,MAAAA,gBAAgB,CAAClI,GAAG,CAACI,MAAM,CAAC;AAC5BE,MAAAA,QAAQ,CAACN,GAAG,CAACI,MAAM,CAAC;AAEpB0I,MAAAA,aAAa,GAAGpP,IAAI;AACtB,KAAC,MAAM;AACLwO,MAAAA,gBAAgB,CAAClI,GAAG,CAACM,QAAQ,CAAC;MAE9B8H,YAAY,IAAI1O,IAAI,GAAGkP,QAAQ;AAC/BR,MAAAA,YAAY,IAAIG,cAAc;AAC9BC,MAAAA,WAAW,IAAIJ,YAAY;AAC3B9H,MAAAA,QAAQ,CAACtE,GAAG,CAACoM,YAAY,GAAGO,qBAAqB,CAAC;MAElDG,aAAa,GAAGN,WAAW,GAAGC,mBAAmB;AACnD;AAEAJ,IAAAA,eAAe,GAAG/O,QAAQ,CAACwP,aAAa,CAAC;AACzCL,IAAAA,mBAAmB,GAAGD,WAAW;AACjC,WAAO3M,IAAI;AACb;EAEA,SAASkN,OAAOA,GAAA;AACd,UAAMrP,IAAI,GAAG0G,MAAM,CAACL,GAAG,EAAE,GAAGkI,cAAc,CAAClI,GAAG,EAAE;AAChD,WAAO7G,OAAO,CAACQ,IAAI,CAAC,GAAG,KAAK;AAC9B;EAEA,SAASkP,QAAQA,GAAA;AACf,WAAON,cAAc;AACvB;EAEA,SAASrJ,SAASA,GAAA;AAChB,WAAOoJ,eAAe;AACxB;EAEA,SAASW,QAAQA,GAAA;AACf,WAAOZ,YAAY;AACrB;EAEA,SAASa,eAAeA,GAAA;IACtB,OAAOlF,WAAW,CAACoE,YAAY,CAAC;AAClC;EAEA,SAASe,eAAeA,GAAA;IACtB,OAAOpF,WAAW,CAAC9C,YAAY,CAAC;AAClC;EAEA,SAAS+C,WAAWA,CAAC5K,CAAS;AAC5BmP,IAAAA,cAAc,GAAGnP,CAAC;AAClB,WAAO0C,IAAI;AACb;EAEA,SAASiI,WAAWA,CAAC3K,CAAS;AAC5BoP,IAAAA,cAAc,GAAGpP,CAAC;AAClB,WAAO0C,IAAI;AACb;AAEA,QAAMA,IAAI,GAAmB;IAC3BoD,SAAS;IACT2J,QAAQ;IACRI,QAAQ;IACRN,IAAI;IACJK,OAAO;IACPG,eAAe;IACfD,eAAe;IACfnF,WAAW;AACXC,IAAAA,WAAAA;GACD;AACD,SAAOlI,IAAI;AACb;;AC9FM,SAAUsN,YAAYA,CAC1BC,KAAgB,EAChB9I,QAAsB,EACtBF,MAAoB,EACpBK,UAA0B,EAC1BG,aAAgC;AAEhC,QAAMyI,iBAAiB,GAAGzI,aAAa,CAAChF,OAAO,CAAC,EAAE,CAAC;AACnD,QAAM0N,mBAAmB,GAAG1I,aAAa,CAAChF,OAAO,CAAC,EAAE,CAAC;AACrD,QAAM2N,aAAa,GAAGrK,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC;EACtC,IAAIsK,QAAQ,GAAG,KAAK;EAEpB,SAASC,eAAeA,GAAA;IACtB,IAAID,QAAQ,EAAE,OAAO,KAAK;AAC1B,QAAI,CAACJ,KAAK,CAAC9J,UAAU,CAACc,MAAM,CAACL,GAAG,EAAE,CAAC,EAAE,OAAO,KAAK;AACjD,QAAI,CAACqJ,KAAK,CAAC9J,UAAU,CAACgB,QAAQ,CAACP,GAAG,EAAE,CAAC,EAAE,OAAO,KAAK;AACnD,WAAO,IAAI;AACb;EAEA,SAASR,SAASA,CAACsE,WAAoB;AACrC,QAAI,CAAC4F,eAAe,EAAE,EAAE;AACxB,UAAMC,IAAI,GAAGN,KAAK,CAAChK,UAAU,CAACkB,QAAQ,CAACP,GAAG,EAAE,CAAC,GAAG,KAAK,GAAG,KAAK;AAC7D,UAAM4J,UAAU,GAAGzQ,OAAO,CAACkQ,KAAK,CAACM,IAAI,CAAC,GAAGpJ,QAAQ,CAACP,GAAG,EAAE,CAAC;AACxD,UAAM6J,YAAY,GAAGxJ,MAAM,CAACL,GAAG,EAAE,GAAGO,QAAQ,CAACP,GAAG,EAAE;IAClD,MAAMgF,QAAQ,GAAGwE,aAAa,CAAChK,SAAS,CAACoK,UAAU,GAAGL,mBAAmB,CAAC;AAE1ElJ,IAAAA,MAAM,CAACyJ,QAAQ,CAACD,YAAY,GAAG7E,QAAQ,CAAC;IAExC,IAAI,CAAClB,WAAW,IAAI3K,OAAO,CAAC0Q,YAAY,CAAC,GAAGP,iBAAiB,EAAE;AAC7DjJ,MAAAA,MAAM,CAACJ,GAAG,CAACoJ,KAAK,CAAC7J,SAAS,CAACa,MAAM,CAACL,GAAG,EAAE,CAAC,CAAC;MACzCU,UAAU,CAACsD,WAAW,CAAC,EAAE,CAAC,CAACmF,eAAe,EAAE;AAC9C;AACF;EAEA,SAASY,YAAYA,CAACC,MAAe;IACnCP,QAAQ,GAAG,CAACO,MAAM;AACpB;AAEA,QAAMlO,IAAI,GAAqB;IAC7B4N,eAAe;IACflK,SAAS;AACTuK,IAAAA,YAAAA;GACD;AACD,SAAOjO,IAAI;AACb;;AC9CM,SAAUmO,aAAaA,CAC3BzO,QAAgB,EAChB0O,WAAmB,EACnBC,YAAsB,EACtBC,aAAsC,EACtCC,cAAsB;EAEtB,MAAMC,YAAY,GAAGnL,KAAK,CAAC,CAAC+K,WAAW,GAAG1O,QAAQ,EAAE,CAAC,CAAC;AACtD,QAAM+O,YAAY,GAAGC,cAAc,EAAE;AACrC,QAAMC,kBAAkB,GAAGC,sBAAsB,EAAE;AACnD,QAAMC,cAAc,GAAGC,gBAAgB,EAAE;AAEzC,WAASC,iBAAiBA,CAACC,KAAa,EAAEC,IAAY;AACpD,WAAOtR,QAAQ,CAACqR,KAAK,EAAEC,IAAI,CAAC,GAAG,CAAC;AAClC;EAEA,SAASL,sBAAsBA,GAAA;AAC7B,UAAMM,SAAS,GAAGT,YAAY,CAAC,CAAC,CAAC;AACjC,UAAMU,OAAO,GAAGjR,SAAS,CAACuQ,YAAY,CAAC;AACvC,UAAMnL,GAAG,GAAGmL,YAAY,CAACW,WAAW,CAACF,SAAS,CAAC;IAC/C,MAAM9Q,GAAG,GAAGqQ,YAAY,CAAC9C,OAAO,CAACwD,OAAO,CAAC,GAAG,CAAC;AAC7C,WAAO9L,KAAK,CAACC,GAAG,EAAElF,GAAG,CAAC;AACxB;EAEA,SAASsQ,cAAcA,GAAA;IACrB,OAAOL,YAAY,CAChB5R,GAAG,CAAC,CAAC4S,WAAW,EAAErS,KAAK,KAAI;MAC1B,MAAM;QAAEsG,GAAG;AAAElF,QAAAA,GAAAA;AAAK,UAAGoQ,YAAY;AACjC,YAAMS,IAAI,GAAGT,YAAY,CAAC9K,SAAS,CAAC2L,WAAW,CAAC;MAChD,MAAMC,OAAO,GAAG,CAACtS,KAAK;AACtB,YAAMuS,MAAM,GAAGlR,gBAAgB,CAACgQ,YAAY,EAAErR,KAAK,CAAC;MACpD,IAAIsS,OAAO,EAAE,OAAOlR,GAAG;MACvB,IAAImR,MAAM,EAAE,OAAOjM,GAAG;MACtB,IAAIyL,iBAAiB,CAACzL,GAAG,EAAE2L,IAAI,CAAC,EAAE,OAAO3L,GAAG;MAC5C,IAAIyL,iBAAiB,CAAC3Q,GAAG,EAAE6Q,IAAI,CAAC,EAAE,OAAO7Q,GAAG;AAC5C,aAAO6Q,IAAI;AACb,KAAC,CAAC,CACDxS,GAAG,CAAE+S,WAAW,IAAKC,UAAU,CAACD,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D;EAEA,SAASZ,gBAAgBA,GAAA;IACvB,IAAIV,WAAW,IAAI1O,QAAQ,GAAG6O,cAAc,EAAE,OAAO,CAACC,YAAY,CAACpQ,GAAG,CAAC;AACvE,QAAIkQ,aAAa,KAAK,WAAW,EAAE,OAAOG,YAAY;IACtD,MAAM;MAAEnL,GAAG;AAAElF,MAAAA,GAAAA;AAAK,QAAGuQ,kBAAkB;AACvC,WAAOF,YAAY,CAACkB,KAAK,CAACrM,GAAG,EAAElF,GAAG,CAAC;AACrC;AAEA,QAAM4B,IAAI,GAAsB;IAC9B6O,cAAc;AACdF,IAAAA,kBAAAA;GACD;AACD,SAAO3O,IAAI;AACb;;SCvDgB4P,WAAWA,CACzBxB,WAAmB,EACnByB,WAAqB,EACrB/L,IAAa;AAEb,QAAM1F,GAAG,GAAGyR,WAAW,CAAC,CAAC,CAAC;EAC1B,MAAMvM,GAAG,GAAGQ,IAAI,GAAG1F,GAAG,GAAGgQ,WAAW,GAAGlQ,SAAS,CAAC2R,WAAW,CAAC;AAC7D,QAAMtC,KAAK,GAAGlK,KAAK,CAACC,GAAG,EAAElF,GAAG,CAAC;AAE7B,QAAM4B,IAAI,GAAoB;AAC5BuN,IAAAA,KAAAA;GACD;AACD,SAAOvN,IAAI;AACb;;ACbM,SAAU8P,YAAYA,CAC1B1B,WAAmB,EACnBb,KAAgB,EAChB9I,QAAsB,EACtBsL,OAAuB;EAEvB,MAAMC,WAAW,GAAG,GAAG;AACvB,QAAM1M,GAAG,GAAGiK,KAAK,CAACjK,GAAG,GAAG0M,WAAW;AACnC,QAAM5R,GAAG,GAAGmP,KAAK,CAACnP,GAAG,GAAG4R,WAAW;EACnC,MAAM;IAAEzM,UAAU;AAAEC,IAAAA,UAAAA;AAAY,MAAGH,KAAK,CAACC,GAAG,EAAElF,GAAG,CAAC;EAElD,SAAS6R,UAAUA,CAAC7M,SAAiB;AACnC,QAAIA,SAAS,KAAK,CAAC,EAAE,OAAOI,UAAU,CAACiB,QAAQ,CAACP,GAAG,EAAE,CAAC;AACtD,QAAId,SAAS,KAAK,CAAC,CAAC,EAAE,OAAOG,UAAU,CAACkB,QAAQ,CAACP,GAAG,EAAE,CAAC;AACvD,WAAO,KAAK;AACd;EAEA,SAASJ,IAAIA,CAACV,SAAiB;AAC7B,QAAI,CAAC6M,UAAU,CAAC7M,SAAS,CAAC,EAAE;IAE5B,MAAM8M,YAAY,GAAG9B,WAAW,IAAIhL,SAAS,GAAG,CAAC,CAAC,CAAC;IACnD2M,OAAO,CAAC7Q,OAAO,CAAEiR,CAAC,IAAKA,CAAC,CAAChQ,GAAG,CAAC+P,YAAY,CAAC,CAAC;AAC7C;AAEA,QAAMlQ,IAAI,GAAqB;AAC7B8D,IAAAA,IAAAA;GACD;AACD,SAAO9D,IAAI;AACb;;AC7BM,SAAUoQ,cAAcA,CAAC7C,KAAgB;EAC7C,MAAM;IAAEnP,GAAG;AAAE5C,IAAAA,MAAAA;AAAQ,MAAG+R,KAAK;EAE7B,SAASrJ,GAAGA,CAAC5G,CAAS;AACpB,UAAMuL,eAAe,GAAGvL,CAAC,GAAGc,GAAG;AAC/B,WAAO5C,MAAM,GAAGqN,eAAe,GAAG,CAACrN,MAAM,GAAG,CAAC;AAC/C;AAEA,QAAMwE,IAAI,GAAuB;AAC/BkE,IAAAA,GAAAA;GACD;AACD,SAAOlE,IAAI;AACb;;ACPM,SAAUqQ,WAAWA,CACzB/N,IAAc,EACdgO,SAAwB,EACxBC,aAA2B,EAC3BC,UAA0B,EAC1BC,cAAkC;EAElC,MAAM;IAAE7N,SAAS;AAAEE,IAAAA,OAAAA;AAAS,MAAGR,IAAI;EACnC,MAAM;AAAEoO,IAAAA,WAAAA;AAAa,MAAGD,cAAc;EACtC,MAAME,UAAU,GAAGC,YAAY,EAAE,CAACnU,GAAG,CAAC6T,SAAS,CAACvQ,OAAO,CAAC;AACxD,QAAM8Q,KAAK,GAAGC,gBAAgB,EAAE;AAChC,QAAMzC,YAAY,GAAG0C,cAAc,EAAE;EAErC,SAASH,YAAYA,GAAA;AACnB,WAAOF,WAAW,CAACF,UAAU,CAAC,CAC3B/T,GAAG,CAAEuU,KAAK,IAAK9S,SAAS,CAAC8S,KAAK,CAAC,CAAClO,OAAO,CAAC,GAAGkO,KAAK,CAAC,CAAC,CAAC,CAACpO,SAAS,CAAC,CAAC,CAC/DnG,GAAG,CAACY,OAAO,CAAC;AACjB;EAEA,SAASyT,gBAAgBA,GAAA;IACvB,OAAON,UAAU,CACd/T,GAAG,CAAEwU,IAAI,IAAKV,aAAa,CAAC3N,SAAS,CAAC,GAAGqO,IAAI,CAACrO,SAAS,CAAC,CAAC,CACzDnG,GAAG,CAAEwS,IAAI,IAAK,CAAC5R,OAAO,CAAC4R,IAAI,CAAC,CAAC;AAClC;EAEA,SAAS8B,cAAcA,GAAA;AACrB,WAAOL,WAAW,CAACG,KAAK,CAAC,CACtBpU,GAAG,CAAEyU,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAChBzU,GAAG,CAAC,CAACwS,IAAI,EAAEjS,KAAK,KAAKiS,IAAI,GAAG0B,UAAU,CAAC3T,KAAK,CAAC,CAAC;AACnD;AAEA,QAAMgD,IAAI,GAAoB;IAC5B6Q,KAAK;AACLxC,IAAAA,YAAAA;GACD;AACD,SAAOrO,IAAI;AACb;;ACjCgB,SAAAmR,aAAaA,CAC3BC,YAAqB,EACrB9C,aAAsC,EACtCuB,WAAqB,EACrBlB,kBAA6B,EAC7B8B,cAAkC,EAClCY,YAAsB;EAEtB,MAAM;AAAEX,IAAAA,WAAAA;AAAa,MAAGD,cAAc;EACtC,MAAM;IAAEnN,GAAG;AAAElF,IAAAA,GAAAA;AAAK,MAAGuQ,kBAAkB;AACvC,QAAM2C,aAAa,GAAGC,mBAAmB,EAAE;EAE3C,SAASA,mBAAmBA,GAAA;AAC1B,UAAMC,mBAAmB,GAAGd,WAAW,CAACW,YAAY,CAAC;AACrD,UAAMI,YAAY,GAAG,CAACL,YAAY,IAAI9C,aAAa,KAAK,WAAW;IAEnE,IAAIuB,WAAW,CAACrU,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC6V,YAAY,CAAC;IACnD,IAAII,YAAY,EAAE,OAAOD,mBAAmB;AAE5C,WAAOA,mBAAmB,CAAC7B,KAAK,CAACrM,GAAG,EAAElF,GAAG,CAAC,CAAC3B,GAAG,CAAC,CAACiV,KAAK,EAAE1U,KAAK,EAAE2U,MAAM,KAAI;MACtE,MAAMrC,OAAO,GAAG,CAACtS,KAAK;AACtB,YAAMuS,MAAM,GAAGlR,gBAAgB,CAACsT,MAAM,EAAE3U,KAAK,CAAC;AAE9C,UAAIsS,OAAO,EAAE;QACX,MAAMsC,KAAK,GAAG1T,SAAS,CAACyT,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACtC,OAAOrT,eAAe,CAACsT,KAAK,CAAC;AAC/B;AACA,UAAIrC,MAAM,EAAE;AACV,cAAMqC,KAAK,GAAGzT,cAAc,CAACkT,YAAY,CAAC,GAAGnT,SAAS,CAACyT,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACrE,OAAOrT,eAAe,CAACsT,KAAK,EAAE1T,SAAS,CAACyT,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD;AACA,aAAOD,KAAK;AACd,KAAC,CAAC;AACJ;AAEA,QAAM1R,IAAI,GAAsB;AAC9BsR,IAAAA,aAAAA;GACD;AACD,SAAOtR,IAAI;AACb;;ACtCM,SAAU6R,YAAYA,CAC1B/N,IAAa,EACb+L,WAAqB,EACrBzB,WAAmB,EACnBb,KAAgB,EAChBuE,YAA0B;EAE1B,MAAM;IAAErO,UAAU;IAAEE,YAAY;AAAED,IAAAA,SAAAA;AAAS,GAAE,GAAG6J,KAAK;EAErD,SAASwE,WAAWA,CAACC,SAAmB;IACtC,OAAOA,SAAS,CAAC5V,MAAM,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKc,OAAO,CAACf,CAAC,CAAC,GAAGe,OAAO,CAACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE;EAEA,SAAS0V,cAAcA,CAAC1N,MAAc;AACpC,UAAMoD,QAAQ,GAAG7D,IAAI,GAAGH,YAAY,CAACY,MAAM,CAAC,GAAGb,SAAS,CAACa,MAAM,CAAC;IAChE,MAAM2N,eAAe,GAAGrC,WAAW,CAChCpT,GAAG,CAAC,CAACwS,IAAI,EAAEjS,KAAK,MAAM;MAAEa,IAAI,EAAEsU,QAAQ,CAAClD,IAAI,GAAGtH,QAAQ,EAAE,CAAC,CAAC;AAAE3K,MAAAA,KAAAA;KAAO,CAAC,CAAC,CACrEX,IAAI,CAAC,CAAC+V,EAAE,EAAEC,EAAE,KAAKhV,OAAO,CAAC+U,EAAE,CAACvU,IAAI,CAAC,GAAGR,OAAO,CAACgV,EAAE,CAACxU,IAAI,CAAC,CAAC;IAExD,MAAM;AAAEb,MAAAA,KAAAA;AAAO,QAAGkV,eAAe,CAAC,CAAC,CAAC;IACpC,OAAO;MAAElV,KAAK;AAAE2K,MAAAA,QAAAA;KAAU;AAC5B;AAEA,WAASwK,QAAQA,CAAC5N,MAAc,EAAEnB,SAAiB;AACjD,UAAMkP,OAAO,GAAG,CAAC/N,MAAM,EAAEA,MAAM,GAAG6J,WAAW,EAAE7J,MAAM,GAAG6J,WAAW,CAAC;AAEpE,QAAI,CAACtK,IAAI,EAAE,OAAOS,MAAM;AACxB,QAAI,CAACnB,SAAS,EAAE,OAAO2O,WAAW,CAACO,OAAO,CAAC;AAE3C,UAAMC,eAAe,GAAGD,OAAO,CAACvR,MAAM,CAAEyR,CAAC,IAAK/U,QAAQ,CAAC+U,CAAC,CAAC,KAAKpP,SAAS,CAAC;IACxE,IAAImP,eAAe,CAAC/W,MAAM,EAAE,OAAOuW,WAAW,CAACQ,eAAe,CAAC;AAC/D,WAAOrU,SAAS,CAACoU,OAAO,CAAC,GAAGlE,WAAW;AACzC;AAEA,WAASxG,OAAOA,CAAC5K,KAAa,EAAEoG,SAAiB;IAC/C,MAAMqP,UAAU,GAAG5C,WAAW,CAAC7S,KAAK,CAAC,GAAG8U,YAAY,CAAC5N,GAAG,EAAE;AAC1D,UAAMyD,QAAQ,GAAGwK,QAAQ,CAACM,UAAU,EAAErP,SAAS,CAAC;IAChD,OAAO;MAAEpG,KAAK;AAAE2K,MAAAA,QAAAA;KAAU;AAC5B;AAEA,WAASD,UAAUA,CAACC,QAAgB,EAAEsH,IAAa;IACjD,MAAM1K,MAAM,GAAGuN,YAAY,CAAC5N,GAAG,EAAE,GAAGyD,QAAQ;IAC5C,MAAM;MAAE3K,KAAK;AAAE2K,MAAAA,QAAQ,EAAE+K,kBAAAA;AAAoB,QAAGT,cAAc,CAAC1N,MAAM,CAAC;IACtE,MAAMoO,YAAY,GAAG,CAAC7O,IAAI,IAAIL,UAAU,CAACc,MAAM,CAAC;AAEhD,QAAI,CAAC0K,IAAI,IAAI0D,YAAY,EAAE,OAAO;MAAE3V,KAAK;AAAE2K,MAAAA,QAAAA;KAAU;AAErD,UAAM8K,UAAU,GAAG5C,WAAW,CAAC7S,KAAK,CAAC,GAAG0V,kBAAkB;IAC1D,MAAME,YAAY,GAAGjL,QAAQ,GAAGwK,QAAQ,CAACM,UAAU,EAAE,CAAC,CAAC;IAEvD,OAAO;MAAEzV,KAAK;AAAE2K,MAAAA,QAAQ,EAAEiL,YAAAA;KAAc;AAC1C;AAEA,QAAM5S,IAAI,GAAqB;IAC7B0H,UAAU;IACVE,OAAO;AACPuK,IAAAA,QAAAA;GACD;AACD,SAAOnS,IAAI;AACb;;AC9DgB,SAAA6S,QAAQA,CACtBnO,SAAyB,EACzBoO,YAAyB,EACzBC,aAA0B,EAC1BnO,UAA0B,EAC1BC,YAA8B,EAC9BiN,YAA0B,EAC1BhN,YAA8B;EAE9B,SAASH,QAAQA,CAACJ,MAAkB;AAClC,UAAMyO,YAAY,GAAGzO,MAAM,CAACoD,QAAQ;IACpC,MAAMsL,SAAS,GAAG1O,MAAM,CAACvH,KAAK,KAAK8V,YAAY,CAAC5O,GAAG,EAAE;AAErD4N,IAAAA,YAAY,CAAC3R,GAAG,CAAC6S,YAAY,CAAC;AAE9B,QAAIA,YAAY,EAAE;AAChB,UAAIpO,UAAU,CAACmI,QAAQ,EAAE,EAAE;QACzBrI,SAAS,CAAC9E,KAAK,EAAE;AACnB,OAAC,MAAM;QACL8E,SAAS,CAACvD,MAAM,EAAE;AAClBuD,QAAAA,SAAS,CAACtD,MAAM,CAAC,CAAC,CAAC;QACnBsD,SAAS,CAACvD,MAAM,EAAE;AACpB;AACF;AAEA,QAAI8R,SAAS,EAAE;MACbF,aAAa,CAAC5O,GAAG,CAAC2O,YAAY,CAAC5O,GAAG,EAAE,CAAC;AACrC4O,MAAAA,YAAY,CAAC3O,GAAG,CAACI,MAAM,CAACvH,KAAK,CAAC;AAC9B8H,MAAAA,YAAY,CAACsD,IAAI,CAAC,QAAQ,CAAC;AAC7B;AACF;AAEA,WAAST,QAAQA,CAACrK,CAAS,EAAE2R,IAAa;IACxC,MAAM1K,MAAM,GAAGM,YAAY,CAAC6C,UAAU,CAACpK,CAAC,EAAE2R,IAAI,CAAC;IAC/CtK,QAAQ,CAACJ,MAAM,CAAC;AAClB;AAEA,WAASvH,KAAKA,CAACM,CAAS,EAAE8F,SAAiB;IACzC,MAAM8P,WAAW,GAAGJ,YAAY,CAAC1O,KAAK,EAAE,CAACD,GAAG,CAAC7G,CAAC,CAAC;AAC/C,UAAMiH,MAAM,GAAGM,YAAY,CAAC+C,OAAO,CAACsL,WAAW,CAAChP,GAAG,EAAE,EAAEd,SAAS,CAAC;IACjEuB,QAAQ,CAACJ,MAAM,CAAC;AAClB;AAEA,QAAMvE,IAAI,GAAiB;IACzB2H,QAAQ;AACR3K,IAAAA,KAAAA;GACD;AACD,SAAOgD,IAAI;AACb;;SCzCgBmT,UAAUA,CACxBC,IAAiB,EACjBvI,MAAqB,EACrByG,aAAiD,EACjD3M,QAAsB,EACtBC,UAA0B,EAC1ByO,UAA0B,EAC1BvO,YAA8B,EAC9BwO,UAAkC;AAElC,QAAMC,oBAAoB,GAAG;AAAEhT,IAAAA,OAAO,EAAE,IAAI;AAAEiT,IAAAA,OAAO,EAAE;GAAM;EAC7D,IAAIC,gBAAgB,GAAG,CAAC;EAExB,SAAS/R,IAAIA,CAAC6E,QAA2B;IACvC,IAAI,CAAC+M,UAAU,EAAE;IAEjB,SAAShI,eAAeA,CAACtO,KAAa;MACpC,MAAM0W,OAAO,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AACpC,YAAM9J,QAAQ,GAAG4J,OAAO,GAAGD,gBAAgB;MAE3C,IAAI3J,QAAQ,GAAG,EAAE,EAAE;AAEnBhF,MAAAA,YAAY,CAACsD,IAAI,CAAC,iBAAiB,CAAC;MACpCgL,IAAI,CAACS,UAAU,GAAG,CAAC;AAEnB,YAAMnC,KAAK,GAAGJ,aAAa,CAACwC,SAAS,CAAEpC,KAAK,IAAKA,KAAK,CAACxK,QAAQ,CAAClK,KAAK,CAAC,CAAC;AAEvE,UAAI,CAACE,QAAQ,CAACwU,KAAK,CAAC,EAAE;AAEtB9M,MAAAA,UAAU,CAACsD,WAAW,CAAC,CAAC,CAAC;AACzBvD,MAAAA,QAAQ,CAAC3H,KAAK,CAAC0U,KAAK,EAAE,CAAC,CAAC;AAExB5M,MAAAA,YAAY,CAACsD,IAAI,CAAC,YAAY,CAAC;AACjC;IAEAiL,UAAU,CAAClT,GAAG,CAACnF,QAAQ,EAAE,SAAS,EAAE+Y,gBAAgB,EAAE,KAAK,CAAC;AAE5DlJ,IAAAA,MAAM,CAAC3L,OAAO,CAAC,CAAC8U,KAAK,EAAEtI,UAAU,KAAI;MACnC2H,UAAU,CAAClT,GAAG,CACZ6T,KAAK,EACL,OAAO,EACN3U,GAAe,IAAI;QAClB,IAAIjC,SAAS,CAACkW,UAAU,CAAC,IAAIA,UAAU,CAAC/M,QAAQ,EAAElH,GAAG,CAAC,EAAE;UACtDiM,eAAe,CAACI,UAAU,CAAC;AAC7B;OACD,EACD6H,oBAAoB,CACrB;AACH,KAAC,CAAC;AACJ;EAEA,SAASQ,gBAAgBA,CAACE,KAAoB;AAC5C,QAAIA,KAAK,CAACC,IAAI,KAAK,KAAK,EAAET,gBAAgB,GAAG,IAAIE,IAAI,EAAE,CAACC,OAAO,EAAE;AACnE;AAEA,QAAM5T,IAAI,GAAmB;AAC3B0B,IAAAA,IAAAA;GACD;AACD,SAAO1B,IAAI;AACb;;ACrEM,SAAUmU,QAAQA,CAACC,YAAoB;EAC3C,IAAIC,KAAK,GAAGD,YAAY;EAExB,SAASlQ,GAAGA,GAAA;AACV,WAAOmQ,KAAK;AACd;EAEA,SAASlQ,GAAGA,CAAC7G,CAAwB;AACnC+W,IAAAA,KAAK,GAAGC,cAAc,CAAChX,CAAC,CAAC;AAC3B;EAEA,SAAS6C,GAAGA,CAAC7C,CAAwB;AACnC+W,IAAAA,KAAK,IAAIC,cAAc,CAAChX,CAAC,CAAC;AAC5B;EAEA,SAAS0Q,QAAQA,CAAC1Q,CAAwB;AACxC+W,IAAAA,KAAK,IAAIC,cAAc,CAAChX,CAAC,CAAC;AAC5B;EAEA,SAASgX,cAAcA,CAAChX,CAAwB;IAC9C,OAAOJ,QAAQ,CAACI,CAAC,CAAC,GAAGA,CAAC,GAAGA,CAAC,CAAC4G,GAAG,EAAE;AAClC;AAEA,QAAMlE,IAAI,GAAiB;IACzBkE,GAAG;IACHC,GAAG;IACHhE,GAAG;AACH6N,IAAAA,QAAAA;GACD;AACD,SAAOhO,IAAI;AACb;;AC/BgB,SAAAuU,SAASA,CACvBjS,IAAc,EACdsI,SAAsB;EAEtB,MAAM4J,SAAS,GAAGlS,IAAI,CAACI,MAAM,KAAK,GAAG,GAAG+R,CAAC,GAAGC,CAAC;AAC7C,QAAMC,cAAc,GAAG/J,SAAS,CAACgK,KAAK;EACtC,IAAIjH,QAAQ,GAAG,KAAK;EAEpB,SAAS8G,CAACA,CAACnX,CAAS;IAClB,OAAO,eAAeA,CAAC,CAAa;AACtC;EAEA,SAASoX,CAACA,CAACpX,CAAS;IAClB,OAAO,mBAAmBA,CAAC,CAAS;AACtC;EAEA,SAASuX,EAAEA,CAACtQ,MAAc;AACxB,QAAIoJ,QAAQ,EAAE;IACdgH,cAAc,CAACG,SAAS,GAAGN,SAAS,CAAClS,IAAI,CAACc,SAAS,CAACmB,MAAM,CAAC,CAAC;AAC9D;EAEA,SAAS0J,YAAYA,CAACC,MAAe;IACnCP,QAAQ,GAAG,CAACO,MAAM;AACpB;EAEA,SAASpN,KAAKA,GAAA;AACZ,QAAI6M,QAAQ,EAAE;IACdgH,cAAc,CAACG,SAAS,GAAG,EAAE;AAC7B,QAAI,CAAClK,SAAS,CAACmK,YAAY,CAAC,OAAO,CAAC,EAAEnK,SAAS,CAACoK,eAAe,CAAC,OAAO,CAAC;AAC1E;AAEA,QAAMhV,IAAI,GAAkB;IAC1Bc,KAAK;IACL+T,EAAE;AACF5G,IAAAA,YAAAA;GACD;AACD,SAAOjO,IAAI;AACb;;SCpBgBiV,WAAWA,CACzB3S,IAAc,EACd5C,QAAgB,EAChB0O,WAAmB,EACnBjD,UAAoB,EACpB+J,kBAA4B,EAC5BrE,KAAe,EACfhB,WAAqB,EACrBpL,QAAsB,EACtBoG,MAAqB;EAErB,MAAMsK,cAAc,GAAG,GAAG;AAC1B,QAAMC,QAAQ,GAAGtX,SAAS,CAACoX,kBAAkB,CAAC;EAC9C,MAAMG,SAAS,GAAGvX,SAAS,CAACoX,kBAAkB,CAAC,CAACI,OAAO,EAAE;EACzD,MAAMC,UAAU,GAAGC,WAAW,EAAE,CAACpZ,MAAM,CAACqZ,SAAS,EAAE,CAAC;AAEpD,WAASC,gBAAgBA,CAACC,OAAiB,EAAEnX,IAAY;IACvD,OAAOmX,OAAO,CAAC5W,MAAM,CAAC,CAACzC,CAAS,EAAEoC,CAAC,KAAI;AACrC,aAAOpC,CAAC,GAAG4Y,kBAAkB,CAACxW,CAAC,CAAC;KACjC,EAAEF,IAAI,CAAC;AACV;AAEA,WAASoX,WAAWA,CAACD,OAAiB,EAAEE,GAAW;IACjD,OAAOF,OAAO,CAAC5W,MAAM,CAAC,CAACzC,CAAW,EAAEoC,CAAC,KAAI;AACvC,YAAMoX,YAAY,GAAGJ,gBAAgB,CAACpZ,CAAC,EAAEuZ,GAAG,CAAC;AAC7C,aAAOC,YAAY,GAAG,CAAC,GAAGxZ,CAAC,CAACF,MAAM,CAAC,CAACsC,CAAC,CAAC,CAAC,GAAGpC,CAAC;KAC5C,EAAE,EAAE,CAAC;AACR;EAEA,SAASyZ,eAAeA,CAAC1L,MAAc;IACrC,OAAOwG,KAAK,CAACpU,GAAG,CAAC,CAACwS,IAAI,EAAEjS,KAAK,MAAM;MACjC4C,KAAK,EAAEqP,IAAI,GAAG9D,UAAU,CAACnO,KAAK,CAAC,GAAGmY,cAAc,GAAG9K,MAAM;AACzDvK,MAAAA,GAAG,EAAEmP,IAAI,GAAGvP,QAAQ,GAAGyV,cAAc,GAAG9K,MAAAA;AACzC,MAAC,CAAC;AACL;AAEA,WAAS2L,cAAcA,CACrBL,OAAiB,EACjBtL,MAAc,EACd4L,SAAkB;AAElB,UAAMC,WAAW,GAAGH,eAAe,CAAC1L,MAAM,CAAC;AAE3C,WAAOsL,OAAO,CAAClZ,GAAG,CAAEO,KAAK,IAAI;AAC3B,YAAMmZ,OAAO,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC7H,WAAW;AAC5C,YAAMgI,OAAO,GAAGH,SAAS,GAAG7H,WAAW,GAAG,CAAC;AAC3C,YAAMiI,SAAS,GAAGJ,SAAS,GAAG,KAAK,GAAG,OAAO;MAC7C,MAAMK,SAAS,GAAGJ,WAAW,CAAClZ,KAAK,CAAC,CAACqZ,SAAS,CAAC;MAE/C,OAAO;QACLrZ,KAAK;QACLsZ,SAAS;AACTC,QAAAA,aAAa,EAAEpC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3BK,SAAS,EAAED,SAAS,CAACjS,IAAI,EAAEuI,MAAM,CAAC7N,KAAK,CAAC,CAAC;AACzCuH,QAAAA,MAAM,EAAEA,MAAOE,QAAQ,CAACP,GAAG,EAAE,GAAGoS,SAAS,GAAGH,OAAO,GAAGC,OAAAA;OACvD;AACH,KAAC,CAAC;AACJ;EAEA,SAASZ,WAAWA,GAAA;AAClB,UAAMK,GAAG,GAAGhG,WAAW,CAAC,CAAC,CAAC;AAC1B,UAAM8F,OAAO,GAAGC,WAAW,CAACP,SAAS,EAAEQ,GAAG,CAAC;AAC3C,WAAOG,cAAc,CAACL,OAAO,EAAEvH,WAAW,EAAE,KAAK,CAAC;AACpD;EAEA,SAASqH,SAASA,GAAA;IAChB,MAAMI,GAAG,GAAGnW,QAAQ,GAAGmQ,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;AACzC,UAAM8F,OAAO,GAAGC,WAAW,CAACR,QAAQ,EAAES,GAAG,CAAC;IAC1C,OAAOG,cAAc,CAACL,OAAO,EAAE,CAACvH,WAAW,EAAE,IAAI,CAAC;AACpD;EAEA,SAASoI,OAAOA,GAAA;AACd,WAAOjB,UAAU,CAACzZ,KAAK,CAAC,CAAC;AAAEkB,MAAAA,KAAAA;AAAO,UAAI;MACpC,MAAMyZ,YAAY,GAAGrB,QAAQ,CAACrU,MAAM,CAAErC,CAAC,IAAKA,CAAC,KAAK1B,KAAK,CAAC;AACxD,aAAO0Y,gBAAgB,CAACe,YAAY,EAAE/W,QAAQ,CAAC,IAAI,GAAG;AACxD,KAAC,CAAC;AACJ;EAEA,SAASoE,IAAIA,GAAA;AACXyR,IAAAA,UAAU,CAACrW,OAAO,CAAEoX,SAAS,IAAI;MAC/B,MAAM;QAAE/R,MAAM;QAAEiQ,SAAS;AAAE+B,QAAAA,aAAAA;AAAa,OAAE,GAAGD,SAAS;AACtD,YAAMI,aAAa,GAAGnS,MAAM,EAAE;AAC9B,UAAImS,aAAa,KAAKH,aAAa,CAACrS,GAAG,EAAE,EAAE;AAC3CsQ,MAAAA,SAAS,CAACK,EAAE,CAAC6B,aAAa,CAAC;AAC3BH,MAAAA,aAAa,CAACpS,GAAG,CAACuS,aAAa,CAAC;AAClC,KAAC,CAAC;AACJ;EAEA,SAAS5V,KAAKA,GAAA;AACZyU,IAAAA,UAAU,CAACrW,OAAO,CAAEoX,SAAS,IAAKA,SAAS,CAAC9B,SAAS,CAAC1T,KAAK,EAAE,CAAC;AAChE;AAEA,QAAMd,IAAI,GAAoB;IAC5BwW,OAAO;IACP1V,KAAK;IACLgD,IAAI;AACJyR,IAAAA,UAAAA;GACD;AACD,SAAOvV,IAAI;AACb;;SC5GgB2W,aAAaA,CAC3B/L,SAAsB,EACtB9F,YAA8B,EAC9B8R,WAAoC;AAEpC,MAAIC,gBAAkC;EACtC,IAAIzL,SAAS,GAAG,KAAK;EAErB,SAAS1J,IAAIA,CAAC6E,QAA2B;IACvC,IAAI,CAACqQ,WAAW,EAAE;IAElB,SAAStL,eAAeA,CAACwL,SAA2B;AAClD,WAAK,MAAMC,QAAQ,IAAID,SAAS,EAAE;AAChC,YAAIC,QAAQ,CAAC1W,IAAI,KAAK,WAAW,EAAE;UACjCkG,QAAQ,CAACwF,MAAM,EAAE;AACjBjH,UAAAA,YAAY,CAACsD,IAAI,CAAC,eAAe,CAAC;AAClC;AACF;AACF;AACF;AAEAyO,IAAAA,gBAAgB,GAAG,IAAIG,gBAAgB,CAAEF,SAAS,IAAI;AACpD,UAAI1L,SAAS,EAAE;MACf,IAAIhO,SAAS,CAACwZ,WAAW,CAAC,IAAIA,WAAW,CAACrQ,QAAQ,EAAEuQ,SAAS,CAAC,EAAE;QAC9DxL,eAAe,CAACwL,SAAS,CAAC;AAC5B;AACF,KAAC,CAAC;AAEFD,IAAAA,gBAAgB,CAAC5K,OAAO,CAACrB,SAAS,EAAE;AAAEqM,MAAAA,SAAS,EAAE;AAAM,MAAC;AAC1D;EAEA,SAASpV,OAAOA,GAAA;AACd,QAAIgV,gBAAgB,EAAEA,gBAAgB,CAAC3K,UAAU,EAAE;AACnDd,IAAAA,SAAS,GAAG,IAAI;AAClB;AAEA,QAAMpL,IAAI,GAAsB;IAC9B0B,IAAI;AACJG,IAAAA,OAAAA;GACD;AACD,SAAO7B,IAAI;AACb;;AC1CM,SAAUkX,YAAYA,CAC1BtM,SAAsB,EACtBC,MAAqB,EACrB/F,YAA8B,EAC9BqS,SAAkC;EAElC,MAAMC,oBAAoB,GAA6B,EAAE;EACzD,IAAIC,WAAW,GAAoB,IAAI;EACvC,IAAIC,cAAc,GAAoB,IAAI;AAC1C,MAAIC,oBAA0C;EAC9C,IAAInM,SAAS,GAAG,KAAK;EAErB,SAAS1J,IAAIA,GAAA;AACX6V,IAAAA,oBAAoB,GAAG,IAAIC,oBAAoB,CAC5CjM,OAAO,IAAI;AACV,UAAIH,SAAS,EAAE;AAEfG,MAAAA,OAAO,CAACrM,OAAO,CAAEsM,KAAK,IAAI;QACxB,MAAMxO,KAAK,GAAG6N,MAAM,CAACc,OAAO,CAAcH,KAAK,CAACjH,MAAM,CAAC;AACvD6S,QAAAA,oBAAoB,CAACpa,KAAK,CAAC,GAAGwO,KAAK;AACrC,OAAC,CAAC;AAEF6L,MAAAA,WAAW,GAAG,IAAI;AAClBC,MAAAA,cAAc,GAAG,IAAI;AACrBxS,MAAAA,YAAY,CAACsD,IAAI,CAAC,cAAc,CAAC;AACnC,KAAC,EACD;MACEgL,IAAI,EAAExI,SAAS,CAAC6M,aAAa;AAC7BN,MAAAA,SAAAA;AACD,MACF;IAEDtM,MAAM,CAAC3L,OAAO,CAAE8U,KAAK,IAAKuD,oBAAoB,CAACtL,OAAO,CAAC+H,KAAK,CAAC,CAAC;AAChE;EAEA,SAASnS,OAAOA,GAAA;AACd,QAAI0V,oBAAoB,EAAEA,oBAAoB,CAACrL,UAAU,EAAE;AAC3Dd,IAAAA,SAAS,GAAG,IAAI;AAClB;EAEA,SAASsM,gBAAgBA,CAACC,MAAe;IACvC,OAAO3Z,UAAU,CAACoZ,oBAAoB,CAAC,CAACrY,MAAM,CAC5C,CAAC6Y,IAAc,EAAElM,UAAU,KAAI;AAC7B,YAAM1O,KAAK,GAAG6a,QAAQ,CAACnM,UAAU,CAAC;MAClC,MAAM;AAAEoM,QAAAA,cAAAA;AAAgB,UAAGV,oBAAoB,CAACpa,KAAK,CAAC;AACtD,YAAM+a,WAAW,GAAGJ,MAAM,IAAIG,cAAc;AAC5C,YAAME,cAAc,GAAG,CAACL,MAAM,IAAI,CAACG,cAAc;MAEjD,IAAIC,WAAW,IAAIC,cAAc,EAAEJ,IAAI,CAAC/W,IAAI,CAAC7D,KAAK,CAAC;AACnD,aAAO4a,IAAI;KACZ,EACD,EAAE,CACH;AACH;AAEA,WAAS1T,GAAGA,CAACyT,MAAA,GAAkB,IAAI;AACjC,QAAIA,MAAM,IAAIN,WAAW,EAAE,OAAOA,WAAW;AAC7C,QAAI,CAACM,MAAM,IAAIL,cAAc,EAAE,OAAOA,cAAc;AAEpD,UAAMjG,YAAY,GAAGqG,gBAAgB,CAACC,MAAM,CAAC;AAE7C,QAAIA,MAAM,EAAEN,WAAW,GAAGhG,YAAY;AACtC,QAAI,CAACsG,MAAM,EAAEL,cAAc,GAAGjG,YAAY;AAE1C,WAAOA,YAAY;AACrB;AAEA,QAAMrR,IAAI,GAAqB;IAC7B0B,IAAI;IACJG,OAAO;AACPqC,IAAAA,GAAAA;GACD;AAED,SAAOlE,IAAI;AACb;;AC9EgB,SAAAiY,UAAUA,CACxB3V,IAAc,EACdiO,aAA2B,EAC3BC,UAA0B,EAC1B3F,MAAqB,EACrBqN,WAAoB,EACpB5Y,WAAuB;EAEvB,MAAM;IAAE0D,WAAW;IAAEJ,SAAS;AAAEE,IAAAA,OAAAA;AAAO,GAAE,GAAGR,IAAI;AAChD,QAAM6V,WAAW,GAAG3H,UAAU,CAAC,CAAC,CAAC,IAAI0H,WAAW;AAChD,QAAME,QAAQ,GAAGC,eAAe,EAAE;AAClC,QAAMC,MAAM,GAAGC,aAAa,EAAE;AAC9B,QAAMpN,UAAU,GAAGqF,UAAU,CAAC/T,GAAG,CAACuG,WAAW,CAAC;AAC9C,QAAMkS,kBAAkB,GAAGsD,eAAe,EAAE;EAE5C,SAASH,eAAeA,GAAA;AACtB,QAAI,CAACF,WAAW,EAAE,OAAO,CAAC;AAC1B,UAAMM,SAAS,GAAGjI,UAAU,CAAC,CAAC,CAAC;IAC/B,OAAOnT,OAAO,CAACkT,aAAa,CAAC3N,SAAS,CAAC,GAAG6V,SAAS,CAAC7V,SAAS,CAAC,CAAC;AACjE;EAEA,SAAS2V,aAAaA,GAAA;AACpB,QAAI,CAACJ,WAAW,EAAE,OAAO,CAAC;IAC1B,MAAMvD,KAAK,GAAGtV,WAAW,CAACoZ,gBAAgB,CAACxa,SAAS,CAAC2M,MAAM,CAAC,CAAC;IAC7D,OAAO4E,UAAU,CAACmF,KAAK,CAAC+D,gBAAgB,CAAC,CAAU7V,OAAAA,EAAAA,OAAO,CAAE,EAAC,CAAC;AAChE;EAEA,SAAS0V,eAAeA,GAAA;IACtB,OAAOhI,UAAU,CACd/T,GAAG,CAAC,CAACwU,IAAI,EAAEjU,KAAK,EAAEgU,KAAK,KAAI;MAC1B,MAAM1B,OAAO,GAAG,CAACtS,KAAK;AACtB,YAAMuS,MAAM,GAAGlR,gBAAgB,CAAC2S,KAAK,EAAEhU,KAAK,CAAC;MAC7C,IAAIsS,OAAO,EAAE,OAAOnE,UAAU,CAACnO,KAAK,CAAC,GAAGob,QAAQ;MAChD,IAAI7I,MAAM,EAAE,OAAOpE,UAAU,CAACnO,KAAK,CAAC,GAAGsb,MAAM;AAC7C,aAAOtH,KAAK,CAAChU,KAAK,GAAG,CAAC,CAAC,CAAC4F,SAAS,CAAC,GAAGqO,IAAI,CAACrO,SAAS,CAAC;AACtD,KAAC,CAAC,CACDnG,GAAG,CAACY,OAAO,CAAC;AACjB;AAEA,QAAM2C,IAAI,GAAmB;IAC3BmL,UAAU;IACV+J,kBAAkB;IAClBkD,QAAQ;AACRE,IAAAA,MAAAA;GACD;AACD,SAAOtY,IAAI;AACb;;SCzCgB4Y,cAAcA,CAC5BtW,IAAc,EACd5C,QAAgB,EAChB+Q,cAAwC,EACxC3M,IAAa,EACbyM,aAA2B,EAC3BC,UAA0B,EAC1B4H,QAAgB,EAChBE,MAAc,EACd/J,cAAsB;EAEtB,MAAM;IAAE3L,SAAS;IAAEE,OAAO;AAAEM,IAAAA,SAAAA;AAAS,GAAE,GAAGd,IAAI;AAC9C,QAAMuW,aAAa,GAAG3b,QAAQ,CAACuT,cAAc,CAAC;AAE9C,WAASqI,QAAQA,CAAO/a,KAAa,EAAEgb,SAAiB;AACtD,WAAOjb,SAAS,CAACC,KAAK,CAAC,CACpBgD,MAAM,CAAErC,CAAC,IAAKA,CAAC,GAAGqa,SAAS,KAAK,CAAC,CAAC,CAClCtc,GAAG,CAAEiC,CAAC,IAAKX,KAAK,CAAC4R,KAAK,CAACjR,CAAC,EAAEA,CAAC,GAAGqa,SAAS,CAAC,CAAC;AAC9C;EAEA,SAASC,MAAMA,CAAOjb,KAAa;AACjC,QAAI,CAACA,KAAK,CAACvC,MAAM,EAAE,OAAO,EAAE;AAE5B,WAAOsC,SAAS,CAACC,KAAK,CAAC,CACpBgB,MAAM,CAAC,CAAC4S,MAAgB,EAAEsH,KAAK,EAAEjc,KAAK,KAAI;AACzC,YAAMkc,KAAK,GAAGhb,SAAS,CAACyT,MAAM,CAAC,IAAI,CAAC;AACpC,YAAMrC,OAAO,GAAG4J,KAAK,KAAK,CAAC;AAC3B,YAAM3J,MAAM,GAAG0J,KAAK,KAAK9a,cAAc,CAACJ,KAAK,CAAC;AAE9C,YAAMob,KAAK,GAAG5I,aAAa,CAAC3N,SAAS,CAAC,GAAG4N,UAAU,CAAC0I,KAAK,CAAC,CAACtW,SAAS,CAAC;AACrE,YAAMwW,KAAK,GAAG7I,aAAa,CAAC3N,SAAS,CAAC,GAAG4N,UAAU,CAACyI,KAAK,CAAC,CAACnW,OAAO,CAAC;AACnE,YAAMuW,IAAI,GAAG,CAACvV,IAAI,IAAIwL,OAAO,GAAGlM,SAAS,CAACgV,QAAQ,CAAC,GAAG,CAAC;AACvD,YAAMkB,IAAI,GAAG,CAACxV,IAAI,IAAIyL,MAAM,GAAGnM,SAAS,CAACkV,MAAM,CAAC,GAAG,CAAC;AACpD,YAAMiB,SAAS,GAAGlc,OAAO,CAAC+b,KAAK,GAAGE,IAAI,IAAIH,KAAK,GAAGE,IAAI,CAAC,CAAC;AAExD,UAAIrc,KAAK,IAAIuc,SAAS,GAAG7Z,QAAQ,GAAG6O,cAAc,EAAEoD,MAAM,CAAC9Q,IAAI,CAACoY,KAAK,CAAC;MACtE,IAAI1J,MAAM,EAAEoC,MAAM,CAAC9Q,IAAI,CAAC9C,KAAK,CAACvC,MAAM,CAAC;AACrC,aAAOmW,MAAM;AACf,KAAC,EAAE,EAAE,CAAC,CACLlV,GAAG,CAAC,CAAC+c,WAAW,EAAExc,KAAK,EAAE2U,MAAM,KAAI;AAClC,YAAM8H,YAAY,GAAGlc,IAAI,CAACa,GAAG,CAACuT,MAAM,CAAC3U,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACrD,aAAOe,KAAK,CAAC4R,KAAK,CAAC8J,YAAY,EAAED,WAAW,CAAC;AAC/C,KAAC,CAAC;AACN;EAEA,SAAS9I,WAAWA,CAAO3S,KAAa;AACtC,WAAO8a,aAAa,GAAGC,QAAQ,CAAC/a,KAAK,EAAE0S,cAAc,CAAC,GAAGuI,MAAM,CAACjb,KAAK,CAAC;AACxE;AAEA,QAAMiC,IAAI,GAAuB;AAC/B0Q,IAAAA,WAAAA;GACD;AACD,SAAO1Q,IAAI;AACb;;ACOgB,SAAA0Z,MAAMA,CACpBtG,IAAiB,EACjBxI,SAAsB,EACtBC,MAAqB,EACrB3J,aAAuB,EACvB5B,WAAuB,EACvB3C,OAAoB,EACpBmI,YAA8B;AAE9B;EACA,MAAM;IACJrF,KAAK;AACL6C,IAAAA,IAAI,EAAEqX,UAAU;IAChBvW,SAAS;IACTwW,UAAU;IACV9V,IAAI;IACJiJ,QAAQ;IACR/H,QAAQ;IACRC,aAAa;IACb4U,eAAe;AACfpJ,IAAAA,cAAc,EAAEC,WAAW;IAC3BxL,SAAS;IACToJ,aAAa;IACbxD,WAAW;IACX8L,WAAW;IACXxR,SAAS;AACTkO,IAAAA,UAAAA;AACD,MAAG3W,OAAO;AAEX;EACA,MAAM4R,cAAc,GAAG,CAAC;AACxB,QAAMxD,SAAS,GAAGf,SAAS,EAAE;AAC7B,QAAMuG,aAAa,GAAGxF,SAAS,CAAChL,OAAO,CAAC6K,SAAS,CAAC;EAClD,MAAM4F,UAAU,GAAG3F,MAAM,CAACpO,GAAG,CAACsO,SAAS,CAAChL,OAAO,CAAC;AAChD,QAAMuC,IAAI,GAAGD,IAAI,CAACsX,UAAU,EAAEvW,SAAS,CAAC;AACxC,QAAM1D,QAAQ,GAAG4C,IAAI,CAACU,WAAW,CAACuN,aAAa,CAAC;AAChD,QAAMxL,aAAa,GAAG2F,aAAa,CAAChL,QAAQ,CAAC;AAC7C,QAAM4Q,SAAS,GAAG9Q,SAAS,CAACC,KAAK,EAAEC,QAAQ,CAAC;AAC5C,QAAM0R,YAAY,GAAG,CAACtN,IAAI,IAAI,CAAC,CAACwK,aAAa;AAC7C,QAAM4J,WAAW,GAAGpU,IAAI,IAAI,CAAC,CAACwK,aAAa;EAC3C,MAAM;IAAEnD,UAAU;IAAE+J,kBAAkB;IAAEkD,QAAQ;AAAEE,IAAAA,MAAAA;AAAQ,MAAGL,UAAU,CACrE3V,IAAI,EACJiO,aAAa,EACbC,UAAU,EACV3F,MAAM,EACNqN,WAAW,EACX5Y,WAAW,CACZ;EACD,MAAMmR,cAAc,GAAGmI,cAAc,CACnCtW,IAAI,EACJ5C,QAAQ,EACRgR,WAAW,EACX5M,IAAI,EACJyM,aAAa,EACbC,UAAU,EACV4H,QAAQ,EACRE,MAAM,EACN/J,cAAc,CACf;EACD,MAAM;IAAEsC,KAAK;AAAExC,IAAAA,YAAAA;AAAc,MAAGgC,WAAW,CACzC/N,IAAI,EACJgO,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,cAAc,CACf;EACD,MAAMrC,WAAW,GAAG,CAAClQ,SAAS,CAAC2S,KAAK,CAAC,GAAG3S,SAAS,CAACgX,kBAAkB,CAAC;EACrE,MAAM;IAAErG,cAAc;AAAEF,IAAAA,kBAAAA;AAAoB,MAAGR,aAAa,CAC1DzO,QAAQ,EACR0O,WAAW,EACXC,YAAY,EACZC,aAAa,EACbC,cAAc,CACf;AACD,QAAMsB,WAAW,GAAGuB,YAAY,GAAGvC,cAAc,GAAGR,YAAY;EAChE,MAAM;AAAEd,IAAAA,KAAAA;GAAO,GAAGqC,WAAW,CAACxB,WAAW,EAAEyB,WAAW,EAAE/L,IAAI,CAAC;AAE7D;AACA,QAAM9G,KAAK,GAAG6G,OAAO,CAAC1F,cAAc,CAAC0R,WAAW,CAAC,EAAE+J,UAAU,EAAE9V,IAAI,CAAC;AACpE,QAAMiP,aAAa,GAAG/V,KAAK,CAACoH,KAAK,EAAE;AACnC,QAAMiN,YAAY,GAAGvT,SAAS,CAAC+M,MAAM,CAAC;AAEtC;EACA,MAAM1J,MAAM,GAAyBA,CACnC;IAAE2Y,WAAW;IAAElV,UAAU;IAAE4J,YAAY;AAAE7R,IAAAA,OAAO,EAAE;AAAEmH,MAAAA,IAAAA;AAAI;GAAI,EAC5DxC,QAAQ,KACN;AACF,QAAI,CAACwC,IAAI,EAAE0K,YAAY,CAAC9K,SAAS,CAACoW,WAAW,CAAC9R,WAAW,EAAE,CAAC;AAC5DpD,IAAAA,UAAU,CAACiI,IAAI,CAACvL,QAAQ,CAAC;GAC1B;EAED,MAAMF,MAAM,GAAyBA,CACnC;IACEwD,UAAU;IACV4P,SAAS;IACT/P,QAAQ;IACR2H,cAAc;IACd2N,YAAY;IACZC,WAAW;IACXF,WAAW;IACXpV,SAAS;IACTI,YAAY;IACZ0J,YAAY;AACZ7R,IAAAA,OAAO,EAAE;AAAEmH,MAAAA,IAAAA;AAAM;GAClB,EACD5B,SAAS,KACP;AACF,UAAM+X,YAAY,GAAGrV,UAAU,CAACsI,OAAO,EAAE;AACzC,UAAMgN,YAAY,GAAG,CAAC1L,YAAY,CAACZ,eAAe,EAAE;IACpD,MAAMuM,UAAU,GAAGrW,IAAI,GAAGmW,YAAY,GAAGA,YAAY,IAAIC,YAAY;IAErE,IAAIC,UAAU,IAAI,CAACL,WAAW,CAAC9R,WAAW,EAAE,EAAE;MAC5CtD,SAAS,CAAC5C,IAAI,EAAE;AAChBgD,MAAAA,YAAY,CAACsD,IAAI,CAAC,QAAQ,CAAC;AAC7B;IACA,IAAI,CAAC+R,UAAU,EAAErV,YAAY,CAACsD,IAAI,CAAC,QAAQ,CAAC;AAE5C,UAAMgS,oBAAoB,GACxB3V,QAAQ,CAACP,GAAG,EAAE,GAAGhC,SAAS,GAAGmK,gBAAgB,CAACnI,GAAG,EAAE,IAAI,CAAC,GAAGhC,SAAS,CAAC;AAEvEkK,IAAAA,cAAc,CAACjI,GAAG,CAACiW,oBAAoB,CAAC;AAExC,QAAItW,IAAI,EAAE;MACRiW,YAAY,CAACjW,IAAI,CAACc,UAAU,CAACxB,SAAS,EAAE,CAAC;MACzC4W,WAAW,CAAClW,IAAI,EAAE;AACpB;IAEA0Q,SAAS,CAACK,EAAE,CAACzI,cAAc,CAAClI,GAAG,EAAE,CAAC;GACnC;EACD,MAAMQ,SAAS,GAAGzD,UAAU,CAC1BC,aAAa,EACb5B,WAAW,EACVgC,QAAQ,IAAKH,MAAM,CAACkZ,MAAM,EAAE/Y,QAAQ,CAAC,EACrCY,SAAiB,IAAKd,MAAM,CAACiZ,MAAM,EAAEnY,SAAS,CAAC,CACjD;AAED;EACA,MAAMgH,QAAQ,GAAG,IAAI;EACrB,MAAMoR,aAAa,GAAGzK,WAAW,CAAC7S,KAAK,CAACkH,GAAG,EAAE,CAAC;AAC9C,QAAMO,QAAQ,GAAG0P,QAAQ,CAACmG,aAAa,CAAC;AACxC,QAAMjO,gBAAgB,GAAG8H,QAAQ,CAACmG,aAAa,CAAC;AAChD,QAAMlO,cAAc,GAAG+H,QAAQ,CAACmG,aAAa,CAAC;AAC9C,QAAM/V,MAAM,GAAG4P,QAAQ,CAACmG,aAAa,CAAC;AACtC,QAAM1V,UAAU,GAAGuH,UAAU,CAC3B1H,QAAQ,EACR2H,cAAc,EACdC,gBAAgB,EAChB9H,MAAM,EACNwI,QAAQ,EACR7D,QAAQ,CACT;AACD,QAAMrE,YAAY,GAAGgN,YAAY,CAC/B/N,IAAI,EACJ+L,WAAW,EACXzB,WAAW,EACXb,KAAK,EACLhJ,MAAM,CACP;AACD,QAAMI,QAAQ,GAAGkO,QAAQ,CACvBnO,SAAS,EACT1H,KAAK,EACL+V,aAAa,EACbnO,UAAU,EACVC,YAAY,EACZN,MAAM,EACNO,YAAY,CACb;AACD,QAAMyV,cAAc,GAAGnK,cAAc,CAAC7C,KAAK,CAAC;AAC5C,QAAM8F,UAAU,GAAGpT,UAAU,EAAE;EAC/B,MAAMua,YAAY,GAAGtD,YAAY,CAC/BtM,SAAS,EACTC,MAAM,EACN/F,YAAY,EACZ+U,eAAe,CAChB;EACD,MAAM;AAAEvI,IAAAA,aAAAA;AAAa,GAAE,GAAGH,aAAa,CACrCC,YAAY,EACZ9C,aAAa,EACbuB,WAAW,EACXlB,kBAAkB,EAClB8B,cAAc,EACdY,YAAY,CACb;AACD,QAAMoJ,UAAU,GAAGtH,UAAU,CAC3BC,IAAI,EACJvI,MAAM,EACNyG,aAAa,EACb3M,QAAQ,EACRC,UAAU,EACVyO,UAAU,EACVvO,YAAY,EACZwO,UAAU,CACX;AAED;AACA,QAAM+G,MAAM,GAAe;IACzBnZ,aAAa;IACb5B,WAAW;IACXwF,YAAY;IACZyL,aAAa;IACbC,UAAU;IACV9L,SAAS;IACTpC,IAAI;IACJwX,WAAW,EAAEzV,WAAW,CACtB/B,IAAI,EACJ8Q,IAAI,EACJlS,aAAa,EACb5B,WAAW,EACXiF,MAAM,EACN6E,WAAW,CAAC9G,IAAI,EAAEhD,WAAW,CAAC,EAC9BmF,QAAQ,EACRC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZ7H,KAAK,EACL8H,YAAY,EACZC,aAAa,EACbC,QAAQ,EACRC,aAAa,EACbC,SAAS,EACTgE,QAAQ,EACR9D,SAAS,CACV;IACDiO,UAAU;IACVtO,aAAa;IACb/H,KAAK;IACL+V,aAAa;IACbxF,KAAK;IACL9I,QAAQ;IACR2H,cAAc;IACdC,gBAAgB;IAChB1P,OAAO;AACP+d,IAAAA,aAAa,EAAE/P,aAAa,CAC1BC,SAAS,EACT9F,YAAY,EACZxF,WAAW,EACXuL,MAAM,EACNvI,IAAI,EACJwI,WAAW,EACXC,SAAS,CACV;IACDnG,UAAU;AACV4J,IAAAA,YAAY,EAAElB,YAAY,CACxBC,KAAK,EACLnB,cAAc,EACd7H,MAAM,EACNK,UAAU,EACVG,aAAa,CACd;AACDgV,IAAAA,YAAY,EAAEjK,YAAY,CAAC1B,WAAW,EAAEb,KAAK,EAAEnB,cAAc,EAAE,CAC7D3H,QAAQ,EACR2H,cAAc,EACdC,gBAAgB,EAChB9H,MAAM,CACP,CAAC;IACFgW,cAAc;IACdI,cAAc,EAAE9K,WAAW,CAACpT,GAAG,CAAC8d,cAAc,CAACrW,GAAG,CAAC;IACnD2L,WAAW;IACXhL,YAAY;IACZF,QAAQ;IACRqV,WAAW,EAAE/E,WAAW,CACtB3S,IAAI,EACJ5C,QAAQ,EACR0O,WAAW,EACXjD,UAAU,EACV+J,kBAAkB,EAClBrE,KAAK,EACLhB,WAAW,EACXzD,cAAc,EACdvB,MAAM,CACP;IACD4P,UAAU;IACVG,aAAa,EAAEjE,aAAa,CAAC/L,SAAS,EAAE9F,YAAY,EAAE8R,WAAW,CAAC;IAClE4D,YAAY;IACZnJ,YAAY;IACZC,aAAa;IACbb,cAAc;IACdlM,MAAM;AACNiQ,IAAAA,SAAS,EAAED,SAAS,CAACjS,IAAI,EAAEsI,SAAS;GACrC;AAED,SAAOyP,MAAM;AACf;;SCxUgBQ,YAAYA,GAAA;EAC1B,IAAI3a,SAAS,GAAkB,EAAE;AACjC,MAAI4a,GAAsB;EAE1B,SAASpZ,IAAIA,CAAC6E,QAA2B;AACvCuU,IAAAA,GAAG,GAAGvU,QAAQ;AAChB;EAEA,SAASwU,YAAYA,CAAC1b,GAAmB;AACvC,WAAOa,SAAS,CAACb,GAAG,CAAC,IAAI,EAAE;AAC7B;EAEA,SAAS+I,IAAIA,CAAC/I,GAAmB;AAC/B0b,IAAAA,YAAY,CAAC1b,GAAG,CAAC,CAACH,OAAO,CAAE8b,CAAC,IAAKA,CAAC,CAACF,GAAG,EAAEzb,GAAG,CAAC,CAAC;AAC7C,WAAOW,IAAI;AACb;AAEA,WAASib,EAAEA,CAAC5b,GAAmB,EAAE6b,EAAgB;AAC/Chb,IAAAA,SAAS,CAACb,GAAG,CAAC,GAAG0b,YAAY,CAAC1b,GAAG,CAAC,CAACjD,MAAM,CAAC,CAAC8e,EAAE,CAAC,CAAC;AAC/C,WAAOlb,IAAI;AACb;AAEA,WAASmb,GAAGA,CAAC9b,GAAmB,EAAE6b,EAAgB;AAChDhb,IAAAA,SAAS,CAACb,GAAG,CAAC,GAAG0b,YAAY,CAAC1b,GAAG,CAAC,CAAC0B,MAAM,CAAEia,CAAC,IAAKA,CAAC,KAAKE,EAAE,CAAC;AAC1D,WAAOlb,IAAI;AACb;EAEA,SAASc,KAAKA,GAAA;IACZZ,SAAS,GAAG,EAAE;AAChB;AAEA,QAAMF,IAAI,GAAqB;IAC7B0B,IAAI;IACJ0G,IAAI;IACJ+S,GAAG;IACHF,EAAE;AACFna,IAAAA,KAAAA;GACD;AACD,SAAOd,IAAI;AACb;;AC5BO,MAAMob,cAAc,GAAgB;AACzC3b,EAAAA,KAAK,EAAE,QAAQ;AACf6C,EAAAA,IAAI,EAAE,GAAG;AACTsI,EAAAA,SAAS,EAAE,IAAI;AACfC,EAAAA,MAAM,EAAE,IAAI;AACZyD,EAAAA,aAAa,EAAE,WAAW;AAC1BlL,EAAAA,SAAS,EAAE,KAAK;AAChBqN,EAAAA,cAAc,EAAE,CAAC;AACjBoJ,EAAAA,eAAe,EAAE,CAAC;EAClBje,WAAW,EAAE,EAAE;AACfoJ,EAAAA,QAAQ,EAAE,KAAK;AACfC,EAAAA,aAAa,EAAE,EAAE;AACjBnB,EAAAA,IAAI,EAAE,KAAK;AACXoB,EAAAA,SAAS,EAAE,KAAK;AAChB6H,EAAAA,QAAQ,EAAE,EAAE;AACZ6M,EAAAA,UAAU,EAAE,CAAC;AACb1L,EAAAA,MAAM,EAAE,IAAI;AACZ9I,EAAAA,SAAS,EAAE,IAAI;AACf0F,EAAAA,WAAW,EAAE,IAAI;AACjB8L,EAAAA,WAAW,EAAE,IAAI;AACjBtD,EAAAA,UAAU,EAAE;CACb;;ACjDK,SAAU+H,cAAcA,CAAC/b,WAAuB;AACpD,WAASgc,YAAYA,CACnBngB,QAAe,EACfC,QAAgB;IAEhB,OAAcwD,gBAAgB,CAACzD,QAAQ,EAAEC,QAAQ,IAAI,EAAE,CAAC;AAC1D;EAEA,SAASmgB,cAAcA,CAA2B5e,OAAa;AAC7D,UAAM4e,cAAc,GAAG5e,OAAO,CAACf,WAAW,IAAI,EAAE;IAChD,MAAM4f,mBAAmB,GAAGxd,UAAU,CAACud,cAAc,CAAC,CACnDxa,MAAM,CAAE0a,KAAK,IAAKnc,WAAW,CAACoc,UAAU,CAACD,KAAK,CAAC,CAACE,OAAO,CAAC,CACxDlf,GAAG,CAAEgf,KAAK,IAAKF,cAAc,CAACE,KAAK,CAAC,CAAC,CACrC1c,MAAM,CAAC,CAACzC,CAAC,EAAEsf,WAAW,KAAKN,YAAY,CAAChf,CAAC,EAAEsf,WAAW,CAAC,EAAE,EAAE,CAAC;AAE/D,WAAON,YAAY,CAAC3e,OAAO,EAAE6e,mBAAmB,CAAC;AACnD;EAEA,SAASK,mBAAmBA,CAACC,WAA0B;AACrD,WAAOA,WAAW,CACfrf,GAAG,CAAEE,OAAO,IAAKqB,UAAU,CAACrB,OAAO,CAACf,WAAW,IAAI,EAAE,CAAC,CAAC,CACvDmD,MAAM,CAAC,CAACgd,GAAG,EAAEC,YAAY,KAAKD,GAAG,CAAC3f,MAAM,CAAC4f,YAAY,CAAC,EAAE,EAAE,CAAC,CAC3Dvf,GAAG,CAAC6C,WAAW,CAACoc,UAAU,CAAC;AAChC;AAEA,QAAM1b,IAAI,GAAuB;IAC/Bsb,YAAY;IACZC,cAAc;AACdM,IAAAA,mBAAAA;GACD;AACD,SAAO7b,IAAI;AACb;;ACjCM,SAAUic,cAAcA,CAC5BC,cAAkC;EAElC,IAAIC,aAAa,GAAsB,EAAE;AAEzC,WAASza,IAAIA,CACX6E,QAA2B,EAC3BpK,OAA0B;AAE1BggB,IAAAA,aAAa,GAAGhgB,OAAO,CAAC4E,MAAM,CAC5B,CAAC;AAAEpE,MAAAA,OAAAA;KAAS,KAAKuf,cAAc,CAACX,cAAc,CAAC5e,OAAO,CAAC,CAACuR,MAAM,KAAK,KAAK,CACzE;AACDiO,IAAAA,aAAa,CAACjd,OAAO,CAAExC,MAAM,IAAKA,MAAM,CAACgF,IAAI,CAAC6E,QAAQ,EAAE2V,cAAc,CAAC,CAAC;AAExE,WAAO/f,OAAO,CAAC4C,MAAM,CACnB,CAACtC,GAAG,EAAEC,MAAM,KAAKnC,MAAM,CAAC6hB,MAAM,CAAC3f,GAAG,EAAE;MAAE,CAACC,MAAM,CAACF,IAAI,GAAGE,MAAAA;AAAQ,MAAC,EAC9D,EAAE,CACH;AACH;EAEA,SAASmF,OAAOA,GAAA;AACdsa,IAAAA,aAAa,GAAGA,aAAa,CAACpb,MAAM,CAAErE,MAAM,IAAKA,MAAM,CAACmF,OAAO,EAAE,CAAC;AACpE;AAEA,QAAM7B,IAAI,GAAuB;IAC/B0B,IAAI;AACJG,IAAAA,OAAAA;GACD;AACD,SAAO7B,IAAI;AACb;;ACRA,SAASqc,aAAaA,CACpBjJ,IAAiB,EACjBkJ,WAA8B,EAC9BC,WAA+B;AAE/B,QAAMrb,aAAa,GAAGkS,IAAI,CAAClS,aAAa;AACxC,QAAM5B,WAAW,GAAe4B,aAAa,CAACsb,WAAW;AACzD,QAAMN,cAAc,GAAGb,cAAc,CAAC/b,WAAW,CAAC;AAClD,QAAMmd,cAAc,GAAGR,cAAc,CAACC,cAAc,CAAC;AACrD,QAAMQ,aAAa,GAAGzc,UAAU,EAAE;AAClC,QAAM6E,YAAY,GAAG+V,YAAY,EAAE;EACnC,MAAM;IAAES,YAAY;IAAEC,cAAc;AAAEM,IAAAA,mBAAAA;AAAmB,GAAE,GAAGK,cAAc;EAC5E,MAAM;IAAEjB,EAAE;IAAEE,GAAG;AAAE/S,IAAAA,IAAAA;AAAI,GAAE,GAAGtD,YAAY;EACtC,MAAMiH,MAAM,GAAG4Q,UAAU;EAEzB,IAAIvR,SAAS,GAAG,KAAK;AACrB,MAAIiP,MAAkB;EACtB,IAAIuC,WAAW,GAAGtB,YAAY,CAACF,cAAc,EAAEiB,aAAa,CAACQ,aAAa,CAAC;AAC3E,MAAIlgB,OAAO,GAAG2e,YAAY,CAACsB,WAAW,CAAC;EACvC,IAAIE,UAAU,GAAsB,EAAE;AACtC,MAAIC,UAA4B;AAEhC,MAAInS,SAAsB;AAC1B,MAAIC,MAAqB;EAEzB,SAASmS,aAAaA,GAAA;IACpB,MAAM;AAAEpS,MAAAA,SAAS,EAAEqS,aAAa;AAAEpS,MAAAA,MAAM,EAAEqS,UAAAA;AAAU,KAAE,GAAGvgB,OAAO;AAEhE,UAAMwgB,eAAe,GAAGhgB,QAAQ,CAAC8f,aAAa,CAAC,GAC3C7J,IAAI,CAACgK,aAAa,CAACH,aAAa,CAAC,GACjCA,aAAa;IACjBrS,SAAS,GAAiBuS,eAAe,IAAI/J,IAAI,CAACiK,QAAQ,CAAC,CAAC,CAAE;AAE9D,UAAMC,YAAY,GAAGngB,QAAQ,CAAC+f,UAAU,CAAC,GACrCtS,SAAS,CAAC2S,gBAAgB,CAACL,UAAU,CAAC,GACtCA,UAAU;AACdrS,IAAAA,MAAM,GAAkB,EAAE,CAAC8E,KAAK,CAACjV,IAAI,CAAC4iB,YAAY,IAAI1S,SAAS,CAACyS,QAAQ,CAAC;AAC3E;EAEA,SAASG,YAAYA,CAAC7gB,OAAoB;AACxC,UAAM0d,MAAM,GAAGX,MAAM,CACnBtG,IAAI,EACJxI,SAAS,EACTC,MAAM,EACN3J,aAAa,EACb5B,WAAW,EACX3C,OAAO,EACPmI,YAAY,CACb;AAED,QAAInI,OAAO,CAACmH,IAAI,IAAI,CAACuW,MAAM,CAACL,WAAW,CAACxD,OAAO,EAAE,EAAE;MACjD,MAAMiH,kBAAkB,GAAGljB,MAAM,CAAC6hB,MAAM,CAAC,EAAE,EAAEzf,OAAO,EAAE;AAAEmH,QAAAA,IAAI,EAAE;AAAK,OAAE,CAAC;MACtE,OAAO0Z,YAAY,CAACC,kBAAkB,CAAC;AACzC;AACA,WAAOpD,MAAM;AACf;AAEA,WAASqD,QAAQA,CACfC,WAA8B,EAC9BC,WAA+B;AAE/B,QAAIxS,SAAS,EAAE;AAEfwR,IAAAA,WAAW,GAAGtB,YAAY,CAACsB,WAAW,EAAEe,WAAW,CAAC;AACpDhhB,IAAAA,OAAO,GAAG4e,cAAc,CAACqB,WAAW,CAAC;IACrCE,UAAU,GAAGc,WAAW,IAAId,UAAU;AAEtCE,IAAAA,aAAa,EAAE;AAEf3C,IAAAA,MAAM,GAAGmD,YAAY,CAAC7gB,OAAO,CAAC;IAE9Bkf,mBAAmB,CAAC,CAClBe,WAAW,EACX,GAAGE,UAAU,CAACrgB,GAAG,CAAC,CAAC;AAAEE,MAAAA,OAAAA;KAAS,KAAKA,OAAO,CAAC,CAC5C,CAAC,CAACuC,OAAO,CAAE2e,KAAK,IAAKnB,aAAa,CAACvc,GAAG,CAAC0d,KAAK,EAAE,QAAQ,EAAElB,UAAU,CAAC,CAAC;AAErE,QAAI,CAAChgB,OAAO,CAACuR,MAAM,EAAE;AAErBmM,IAAAA,MAAM,CAAC7F,SAAS,CAACK,EAAE,CAACwF,MAAM,CAAC5V,QAAQ,CAACP,GAAG,EAAE,CAAC;AAC1CmW,IAAAA,MAAM,CAAC3V,SAAS,CAAChD,IAAI,EAAE;AACvB2Y,IAAAA,MAAM,CAACG,YAAY,CAAC9Y,IAAI,EAAE;AAC1B2Y,IAAAA,MAAM,CAACI,UAAU,CAAC/Y,IAAI,CAAC1B,IAAI,CAAC;AAC5Bqa,IAAAA,MAAM,CAACvV,YAAY,CAACpD,IAAI,CAAC1B,IAAI,CAAC;AAC9Bqa,IAAAA,MAAM,CAACK,aAAa,CAAChZ,IAAI,CAAC1B,IAAI,CAAC;AAC/Bqa,IAAAA,MAAM,CAACO,aAAa,CAAClZ,IAAI,CAAC1B,IAAI,CAAC;AAE/B,QAAIqa,MAAM,CAAC1d,OAAO,CAACmH,IAAI,EAAEuW,MAAM,CAACL,WAAW,CAAClW,IAAI,EAAE;AAClD,QAAI8G,SAAS,CAACkT,YAAY,IAAIjT,MAAM,CAACrP,MAAM,EAAE6e,MAAM,CAACP,WAAW,CAACpY,IAAI,CAAC1B,IAAI,CAAC;IAE1E+c,UAAU,GAAGN,cAAc,CAAC/a,IAAI,CAAC1B,IAAI,EAAE8c,UAAU,CAAC;AACpD;AAEA,WAASH,UAAUA,CACjBgB,WAA8B,EAC9BC,WAA+B;AAE/B,UAAMhE,UAAU,GAAGmE,kBAAkB,EAAE;AACvCC,IAAAA,UAAU,EAAE;IACZN,QAAQ,CAACpC,YAAY,CAAC;AAAE1B,MAAAA,UAAAA;AAAU,KAAE,EAAE+D,WAAW,CAAC,EAAEC,WAAW,CAAC;AAChE9Y,IAAAA,YAAY,CAACsD,IAAI,CAAC,QAAQ,CAAC;AAC7B;EAEA,SAAS4V,UAAUA,GAAA;AACjB3D,IAAAA,MAAM,CAACP,WAAW,CAACjY,OAAO,EAAE;AAC5BwY,IAAAA,MAAM,CAAChH,UAAU,CAACvS,KAAK,EAAE;AACzBuZ,IAAAA,MAAM,CAAC7F,SAAS,CAAC1T,KAAK,EAAE;AACxBuZ,IAAAA,MAAM,CAACL,WAAW,CAAClZ,KAAK,EAAE;AAC1BuZ,IAAAA,MAAM,CAACK,aAAa,CAAC7Y,OAAO,EAAE;AAC9BwY,IAAAA,MAAM,CAACO,aAAa,CAAC/Y,OAAO,EAAE;AAC9BwY,IAAAA,MAAM,CAACG,YAAY,CAAC3Y,OAAO,EAAE;AAC7BwY,IAAAA,MAAM,CAAC3V,SAAS,CAAC7C,OAAO,EAAE;IAC1B4a,cAAc,CAAC5a,OAAO,EAAE;IACxB6a,aAAa,CAAC5b,KAAK,EAAE;AACvB;EAEA,SAASe,OAAOA,GAAA;AACd,QAAIuJ,SAAS,EAAE;AACfA,IAAAA,SAAS,GAAG,IAAI;IAChBsR,aAAa,CAAC5b,KAAK,EAAE;AACrBkd,IAAAA,UAAU,EAAE;AACZlZ,IAAAA,YAAY,CAACsD,IAAI,CAAC,SAAS,CAAC;IAC5BtD,YAAY,CAAChE,KAAK,EAAE;AACtB;AAEA,WAAS6D,QAAQA,CAAC3H,KAAa,EAAEihB,IAAc,EAAE7a,SAAkB;AACjE,QAAI,CAACzG,OAAO,CAACuR,MAAM,IAAI9C,SAAS,EAAE;AAClCiP,IAAAA,MAAM,CAACzV,UAAU,CACdyI,eAAe,EAAE,CACjBnF,WAAW,CAAC+V,IAAI,KAAK,IAAI,GAAG,CAAC,GAAGthB,OAAO,CAACoQ,QAAQ,CAAC;IACpDsN,MAAM,CAAC1V,QAAQ,CAAC3H,KAAK,CAACA,KAAK,EAAEoG,SAAS,IAAI,CAAC,CAAC;AAC9C;EAEA,SAAS8a,UAAUA,CAACD,IAAc;AAChC,UAAMzW,IAAI,GAAG6S,MAAM,CAACrd,KAAK,CAACmD,GAAG,CAAC,CAAC,CAAC,CAAC+D,GAAG,EAAE;AACtCS,IAAAA,QAAQ,CAAC6C,IAAI,EAAEyW,IAAI,EAAE,CAAC,CAAC,CAAC;AAC1B;EAEA,SAASE,UAAUA,CAACF,IAAc;AAChC,UAAMG,IAAI,GAAG/D,MAAM,CAACrd,KAAK,CAACmD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC+D,GAAG,EAAE;AACvCS,IAAAA,QAAQ,CAACyZ,IAAI,EAAEH,IAAI,EAAE,CAAC,CAAC;AACzB;EAEA,SAASI,aAAaA,GAAA;AACpB,UAAM7W,IAAI,GAAG6S,MAAM,CAACrd,KAAK,CAACmD,GAAG,CAAC,CAAC,CAAC,CAAC+D,GAAG,EAAE;AACtC,WAAOsD,IAAI,KAAKuW,kBAAkB,EAAE;AACtC;EAEA,SAASO,aAAaA,GAAA;AACpB,UAAMF,IAAI,GAAG/D,MAAM,CAACrd,KAAK,CAACmD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC+D,GAAG,EAAE;AACvC,WAAOka,IAAI,KAAKL,kBAAkB,EAAE;AACtC;EAEA,SAASpD,cAAcA,GAAA;IACrB,OAAON,MAAM,CAACM,cAAc;AAC9B;EAEA,SAASJ,cAAcA,GAAA;AACrB,WAAOF,MAAM,CAACE,cAAc,CAACrW,GAAG,CAACmW,MAAM,CAAC5V,QAAQ,CAACP,GAAG,EAAE,CAAC;AACzD;EAEA,SAAS6Z,kBAAkBA,GAAA;AACzB,WAAO1D,MAAM,CAACrd,KAAK,CAACkH,GAAG,EAAE;AAC3B;EAEA,SAASqa,kBAAkBA,GAAA;AACzB,WAAOlE,MAAM,CAACtH,aAAa,CAAC7O,GAAG,EAAE;AACnC;EAEA,SAASsW,YAAYA,GAAA;AACnB,WAAOH,MAAM,CAACG,YAAY,CAACtW,GAAG,EAAE;AAClC;EAEA,SAASsa,eAAeA,GAAA;AACtB,WAAOnE,MAAM,CAACG,YAAY,CAACtW,GAAG,CAAC,KAAK,CAAC;AACvC;EAEA,SAAS/H,OAAOA,GAAA;AACd,WAAO4gB,UAAU;AACnB;EAEA,SAAS0B,cAAcA,GAAA;AACrB,WAAOpE,MAAM;AACf;EAEA,SAAS/V,QAAQA,GAAA;AACf,WAAO8O,IAAI;AACb;EAEA,SAASsL,aAAaA,GAAA;AACpB,WAAO9T,SAAS;AAClB;EAEA,SAAS+T,UAAUA,GAAA;AACjB,WAAO9T,MAAM;AACf;AAEA,QAAM7K,IAAI,GAAsB;IAC9Bqe,aAAa;IACbC,aAAa;IACbI,aAAa;IACbD,cAAc;IACd5c,OAAO;IACPsZ,GAAG;IACHF,EAAE;IACF7S,IAAI;IACJjM,OAAO;IACPoiB,kBAAkB;IAClBxS,MAAM;IACNzH,QAAQ;IACR4Z,UAAU;IACVC,UAAU;IACV5D,cAAc;IACdI,cAAc;IACdhW,QAAQ;IACRoZ,kBAAkB;IAClBY,UAAU;IACVnE,YAAY;AACZgE,IAAAA,eAAAA;GACD;AAEDd,EAAAA,QAAQ,CAACpB,WAAW,EAAEC,WAAW,CAAC;EAClCqC,UAAU,CAAC,MAAM9Z,YAAY,CAACsD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC9C,SAAOpI,IAAI;AACb;AAMAqc,aAAa,CAACQ,aAAa,GAAGlW,SAAS;;;;;;;;;ACjPvC,SAASkY,gBAAgBA,CACvBliB,OAAA,GAA4B,EAAE,EAC9BR,UAA6B,EAAE;AAE/B,QAAM2iB,aAAa,GAAGC,oBAAM,CAACpiB,OAAO,CAAC;AACrC,QAAMqiB,aAAa,GAAGD,oBAAM,CAAC5iB,OAAO,CAAC;EACrC,MAAM,CAACoK,QAAQ,EAAE0Y,WAAW,CAAC,GAAGC,sBAAQ,EAAqB;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,sBAAQ,EAAe;AAEvD,QAAMnT,MAAM,GAAGsT,yBAAW,CAAC,MAAK;AAC9B,QAAI9Y,QAAQ,EAAEA,QAAQ,CAACwF,MAAM,CAAC+S,aAAa,CAACQ,OAAO,EAAEN,aAAa,CAACM,OAAO,CAAC;AAC7E,GAAC,EAAE,CAAC/Y,QAAQ,CAAC,CAAC;AAEdgZ,EAAAA,uBAAS,CAAC,MAAK;IACb,IAAIrkB,eAAe,CAAC4jB,aAAa,CAACQ,OAAO,EAAE3iB,OAAO,CAAC,EAAE;IACrDmiB,aAAa,CAACQ,OAAO,GAAG3iB,OAAO;AAC/BoP,IAAAA,MAAM,EAAE;AACV,GAAC,EAAE,CAACpP,OAAO,EAAEoP,MAAM,CAAC,CAAC;AAErBwT,EAAAA,uBAAS,CAAC,MAAK;IACb,IAAI3iB,eAAe,CAACoiB,aAAa,CAACM,OAAO,EAAEnjB,OAAO,CAAC,EAAE;IACrD6iB,aAAa,CAACM,OAAO,GAAGnjB,OAAO;AAC/B4P,IAAAA,MAAM,EAAE;AACV,GAAC,EAAE,CAAC5P,OAAO,EAAE4P,MAAM,CAAC,CAAC;AAErBwT,EAAAA,uBAAS,CAAC,MAAK;AACb,QAAIzkB,SAAS,EAAE,IAAIqkB,QAAQ,EAAE;AAC3B9C,MAAAA,aAAa,CAACQ,aAAa,GAAGgC,gBAAgB,CAAChC,aAAa;AAC5D,YAAM2C,WAAW,GAAGnD,aAAa,CAC/B8C,QAAQ,EACRL,aAAa,CAACQ,OAAO,EACrBN,aAAa,CAACM,OAAO,CACtB;MACDL,WAAW,CAACO,WAAW,CAAC;AACxB,aAAO,MAAMA,WAAW,CAAC3d,OAAO,EAAE;AACpC,KAAC,MAAM;MACLod,WAAW,CAACtY,SAAS,CAAC;AACxB;AACF,GAAC,EAAE,CAACwY,QAAQ,EAAEF,WAAW,CAAC,CAAC;AAE3B,SAAO,CAAuBG,WAAW,EAAE7Y,QAAQ,CAAC;AACtD;AAMAsY,gBAAgB,CAAChC,aAAa,GAAGlW,SAAS","sources":["webpack://anotate_imagesearch/../../node_modules/embla-carousel-reactive-utils/src/components/utils.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/utils.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Alignment.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/EventStore.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Animations.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Axis.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Limit.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Counter.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/DragHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/DragTracker.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/NodeRects.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/PercentOfView.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ResizeHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollBody.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollBounds.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollContain.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollLimit.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollLooper.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollProgress.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollSnaps.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlideRegistry.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollTarget.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/ScrollTo.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlideFocus.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Vector1d.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Translate.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlideLooper.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlidesHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlidesInView.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlideSizes.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/SlidesToScroll.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Engine.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/EventHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/Options.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/OptionsHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/PluginsHandler.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel/src/components/EmblaCarousel.ts","webpack://anotate_imagesearch/../../node_modules/embla-carousel-react/src/components/useEmblaCarousel.ts"],"sourcesContent":["import { EmblaPluginType } from 'embla-carousel'\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isRecord(\n  subject: unknown\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || Array.isArray(subject)\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function areOptionsEqual(\n  optionsA: Record<string, unknown>,\n  optionsB: Record<string, unknown>\n): boolean {\n  const optionsAKeys = Object.keys(optionsA)\n  const optionsBKeys = Object.keys(optionsB)\n\n  if (optionsAKeys.length !== optionsBKeys.length) return false\n\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}))\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}))\n\n  if (breakpointsA !== breakpointsB) return false\n\n  return optionsAKeys.every((key) => {\n    const valueA = optionsA[key]\n    const valueB = optionsB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return areOptionsEqual(valueA, valueB)\n  })\n}\n\nexport function sortAndMapPluginToOptions(\n  plugins: EmblaPluginType[]\n): EmblaPluginType['options'][] {\n  return plugins\n    .concat()\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .map((plugin) => plugin.options)\n}\n\nexport function arePluginsEqual(\n  pluginsA: EmblaPluginType[],\n  pluginsB: EmblaPluginType[]\n): boolean {\n  if (pluginsA.length !== pluginsB.length) return false\n\n  const optionsA = sortAndMapPluginToOptions(pluginsA)\n  const optionsB = sortAndMapPluginToOptions(pluginsB)\n\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index]\n    return areOptionsEqual(optionA, optionB)\n  })\n}\n","import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { WindowType } from './utils'\n\nexport type AnimationsUpdateType = (\n  engine: EngineType,\n  timeStep: number\n) => void\nexport type AnimationsRenderType = (\n  engine: EngineType,\n  lagOffset: number\n) => void\n\nexport type AnimationsType = {\n  init: () => void\n  destroy: () => void\n  start: () => void\n  stop: () => void\n  update: () => void\n  render: (lagOffset: number) => void\n}\n\nexport function Animations(\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  update: (timeStep: number) => void,\n  render: (lagOffset: number) => void\n): AnimationsType {\n  const documentVisibleHandler = EventStore()\n  const timeStep = 1000 / 60\n  let lastTimeStamp: number | null = null\n  let lag = 0\n  let animationFrame = 0\n\n  function init(): void {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset()\n    })\n  }\n\n  function destroy(): void {\n    stop()\n    documentVisibleHandler.clear()\n  }\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!animationFrame) return\n    if (!lastTimeStamp) lastTimeStamp = timeStamp\n\n    const elapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    lag += elapsed\n\n    while (lag >= timeStep) {\n      update(timeStep)\n      lag -= timeStep\n    }\n\n    const lagOffset = lag / timeStep\n    render(lagOffset)\n\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function start(): void {\n    if (animationFrame) return\n\n    animationFrame = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(): void {\n    ownerWindow.cancelAnimationFrame(animationFrame)\n    lastTimeStamp = null\n    lag = 0\n    animationFrame = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    lag = 0\n  }\n\n  const self: AnimationsType = {\n    init,\n    destroy,\n    start,\n    stop,\n    update: () => update(timeStep),\n    render\n  }\n  return self\n}\n","import { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\nexport type AxisDirectionOptionType = 'ltr' | 'rtl'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n  direction: (n: number) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: AxisDirectionOptionType\n): AxisType {\n  const isRightToLeft = contentDirection === 'rtl'\n  const isVertical = axis === 'y'\n  const scroll = isVertical ? 'y' : 'x'\n  const cross = isVertical ? 'x' : 'y'\n  const sign = !isVertical && isRightToLeft ? -1 : 1\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { height, width } = nodeRect\n    return isVertical ? height : width\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (isVertical) return 'top'\n    return isRightToLeft ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (isVertical) return 'bottom'\n    return isRightToLeft ? 'left' : 'right'\n  }\n\n  function direction(n: number): number {\n    return n * sign\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number = 0, max: number = 0): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationsType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis, direction } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow)\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt)\n\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(0.75)\n    animation.start()\n    target.add(direction(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n      preventClick = false\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    destroy,\n    pointerDown\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  const observeNodes = [container].concat(slides)\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        if (destroyed) return\n\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          emblaApi.reInit()\n          eventHandler.emit('resize')\n\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    ownerWindow.requestAnimationFrame(() => {\n      observeNodes.forEach((node) => resizeObserver.observe(node))\n    })\n  }\n\n  function destroy(): void {\n    destroyed = true\n    if (resizeObserver) resizeObserver.disconnect()\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: (timeStep: number) => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  offsetLocation: Vector1DType,\n  previousLocation: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let bodyVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(timeStep: number): ScrollBodyType {\n    const fixedDeltaTimeSeconds = timeStep / 1000\n    const duration = scrollDuration * fixedDeltaTimeSeconds\n    const diff = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let directionDiff = 0\n\n    if (isInstant) {\n      bodyVelocity = 0\n      previousLocation.set(target)\n      location.set(target)\n\n      directionDiff = diff\n    } else {\n      previousLocation.set(location)\n\n      bodyVelocity += diff / duration\n      bodyVelocity *= scrollFriction\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity * fixedDeltaTimeSeconds)\n\n      directionDiff = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(directionDiff)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - offsetLocation.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return bodyVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  shouldConstrain: () => boolean\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    shouldConstrain,\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast, deltaAbs } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n  pixelTolerance: number\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function usePixelTolerance(bound: number, snap: number): boolean {\n    return deltaAbs(bound, snap) < 1\n  }\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const { min, max } = scrollBounds\n        const snap = scrollBounds.constrain(snapAligned)\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return max\n        if (isLast) return min\n        if (usePixelTolerance(min, snap)) return min\n        if (usePixelTolerance(max, snap)) return max\n        return snap\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollSnaps: number[],\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n\n    if (scrollSnaps.length === 1) return [slideIndexes]\n    if (doNotContain) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((snap, index) => ({ diff: shortcut(snap - distance, 0), index }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return target\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationsType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start()\n      } else {\n        animation.update()\n        animation.render(1)\n        animation.update()\n      }\n    }\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isBoolean, isNumber } from './utils'\n\ntype FocusHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: FocusEvent\n) => boolean | void\n\nexport type FocusHandlerOptionType = boolean | FocusHandlerCallbackType\n\nexport type SlideFocusType = {\n  init: (emblaApi: EmblaCarouselType) => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType,\n  eventHandler: EventHandlerType,\n  watchFocus: FocusHandlerOptionType\n): SlideFocusType {\n  const focusListenerOptions = { passive: true, capture: true }\n  let lastTabPressTime = 0\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchFocus) return\n\n    function defaultCallback(index: number): void {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      eventHandler.emit('slideFocusStart')\n      root.scrollLeft = 0\n\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n\n      eventHandler.emit('slideFocus')\n    }\n\n    eventStore.add(document, 'keydown', registerTabPress, false)\n\n    slides.forEach((slide, slideIndex) => {\n      eventStore.add(\n        slide,\n        'focus',\n        (evt: FocusEvent) => {\n          if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {\n            defaultCallback(slideIndex)\n          }\n        },\n        focusListenerOptions\n      )\n    })\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n    containerStyle.transform = translate(axis.direction(target))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  location: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => (location.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number,\n  pixelTolerance: number\n): SlidesToScrollType {\n  const { startEdge, endEdge, direction } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB, index) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction(startGap) : 0\n        const gapB = !loop && isLast ? direction(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport {\n  Animations,\n  AnimationsType,\n  AnimationsUpdateType,\n  AnimationsRenderType\n} from './Animations'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  animation: AnimationsType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  offsetLocation: Vector1DType\n  previousLocation: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag,\n    watchFocus\n  } = options\n\n  // Measurements\n  const pixelTolerance = 2\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const axis = Axis(scrollAxis, direction)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap,\n    pixelTolerance\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n    pixelTolerance\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationsUpdateType = (\n    { dragHandler, scrollBody, scrollBounds, options: { loop } },\n    timeStep\n  ) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek(timeStep)\n  }\n\n  const render: AnimationsRenderType = (\n    {\n      scrollBody,\n      translate,\n      location,\n      offsetLocation,\n      scrollLooper,\n      slideLooper,\n      dragHandler,\n      animation,\n      eventHandler,\n      scrollBounds,\n      options: { loop }\n    },\n    lagOffset\n  ) => {\n    const shouldSettle = scrollBody.settled()\n    const withinBounds = !scrollBounds.shouldConstrain()\n    const hasSettled = loop ? shouldSettle : shouldSettle && withinBounds\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    const interpolatedLocation =\n      location.get() * lagOffset + previousLocation.get() * (1 - lagOffset)\n\n    offsetLocation.set(interpolatedLocation)\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(offsetLocation.get())\n  }\n  const animation = Animations(\n    ownerDocument,\n    ownerWindow,\n    (timeStep) => update(engine, timeStep),\n    (lagOffset: number) => render(engine, lagOffset)\n  )\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const previousLocation = Vector1D(startLocation)\n  const offsetLocation = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(\n    location,\n    offsetLocation,\n    previousLocation,\n    target,\n    duration,\n    friction\n  )\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollBody,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    containSnaps,\n    containScroll,\n    scrollSnaps,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore,\n    eventHandler,\n    watchFocus\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(\n      axis,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    previousLocation,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      offsetLocation,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [\n      location,\n      offsetLocation,\n      previousLocation,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      offsetLocation,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  }\n\n  return engine\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n  slideFocusStart: 'slideFocusStart'\n  slideFocus: 'slideFocus'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  clear: () => void\n}\n\nexport function EventHandler(): EventHandlerType {\n  let listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  function clear(): void {\n    listeners = {}\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on,\n    clear\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisDirectionOptionType, AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\nimport { FocusHandlerOptionType } from './SlideFocus'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: AxisDirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n  watchFocus: FocusHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true,\n  watchFocus: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const eventHandler = EventHandler()\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(options: OptionsType): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.animation.init()\n    engine.slidesInView.init()\n    engine.slideFocus.init(self)\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    engine.animation.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n    eventHandler.clear()\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody\n      .useBaseFriction()\n      .useDuration(jump === true ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\ndeclare namespace EmblaCarousel {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nEmblaCarousel.globalOptions = undefined\n\nexport default EmblaCarousel\n","import { useRef, useEffect, useState, useCallback } from 'react'\nimport {\n  areOptionsEqual,\n  arePluginsEqual,\n  canUseDOM\n} from 'embla-carousel-reactive-utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType\n} from 'embla-carousel'\n\nexport type EmblaViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null\n) => void\n\nexport type UseEmblaCarouselType = [\n  EmblaViewportRefType,\n  EmblaCarouselType | undefined\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n  plugins: EmblaPluginType[] = []\n): UseEmblaCarouselType {\n  const storedOptions = useRef(options)\n  const storedPlugins = useRef(plugins)\n  const [emblaApi, setEmblaApi] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n\n  const reInit = useCallback(() => {\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current)\n  }, [emblaApi])\n\n  useEffect(() => {\n    if (areOptionsEqual(storedOptions.current, options)) return\n    storedOptions.current = options\n    reInit()\n  }, [options, reInit])\n\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return\n    storedPlugins.current = plugins\n    reInit()\n  }, [plugins, reInit])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions\n      const newEmblaApi = EmblaCarousel(\n        viewport,\n        storedOptions.current,\n        storedPlugins.current\n      )\n      setEmblaApi(newEmblaApi)\n      return () => newEmblaApi.destroy()\n    } else {\n      setEmblaApi(undefined)\n    }\n  }, [viewport, setEmblaApi])\n\n  return [<EmblaViewportRefType>setViewport, emblaApi]\n}\n\ndeclare namespace useEmblaCarousel {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nuseEmblaCarousel.globalOptions = undefined\n\nexport default useEmblaCarousel\n"],"names":["isObject","subject","Object","prototype","toString","call","isRecord","Array","isArray","canUseDOM","window","document","createElement","areOptionsEqual","optionsA","optionsB","optionsAKeys","keys","optionsBKeys","length","breakpointsA","JSON","stringify","breakpoints","breakpointsB","every","key","valueA","valueB","sortAndMapPluginToOptions","plugins","concat","sort","a","b","name","map","plugin","options","arePluginsEqual","pluginsA","pluginsB","optionA","index","optionB","isNumber","isString","isBoolean","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","factorAbs","diff","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","arrayIsLastIndex","arrayFromNumber","startAt","from","_","i","object","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","Alignment","align","viewSize","predefined","start","center","end","measure","self","EventStore","listeners","add","node","type","handler","passive","removeListener","addEventListener","removeEventListener","legacyMediaQueryList","addListener","push","clear","filter","remove","Animations","ownerDocument","update","render","documentVisibleHandler","timeStep","lastTimeStamp","lag","animationFrame","init","hidden","reset","destroy","stop","animate","timeStamp","elapsed","lagOffset","requestAnimationFrame","cancelAnimationFrame","Axis","axis","contentDirection","isRightToLeft","isVertical","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","nodeRect","height","width","direction","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","set","clone","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","emblaApi","downIfAllowed","down","preventDefault","undefined","up","click","addDragEvents","move","isFocusNode","nodeName","includes","forceBoost","boost","allowedForce","force","targetChanged","next","baseForce","byDistance","distance","byIndex","isMouseEvt","buttons","button","pointerDown","useFriction","useDuration","readPoint","emit","isTouchEvt","touches","lastScroll","lastCross","diffScroll","diffCross","cancelable","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","speed","friction","stopPropagation","DragTracker","logInterval","startEvent","lastEvent","readTime","evtAxis","property","coord","expired","diffDrag","diffTime","isFlick","NodeRects","offsetTop","offsetLeft","offsetWidth","offsetHeight","offset","top","right","bottom","left","PercentOfView","ResizeHandler","container","slides","watchResize","nodeRects","observeNodes","resizeObserver","containerSize","slideSizes","destroyed","readSize","defaultCallback","entries","entry","isContainer","slideIndex","indexOf","lastSize","newSize","diffSize","reInit","ResizeObserver","observe","disconnect","ScrollBody","offsetLocation","previousLocation","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","seek","fixedDeltaTimeSeconds","duration","isInstant","directionDiff","settled","velocity","useBaseDuration","useBaseFriction","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","subtract","toggleActive","active","ScrollContain","contentSize","snapsAligned","containScroll","pixelTolerance","scrollBounds","snapsBounded","measureBounded","scrollContainLimit","findScrollContainLimit","snapsContained","measureContained","usePixelTolerance","bound","snap","startSnap","endSnap","lastIndexOf","snapAligned","isFirst","isLast","scrollBound","parseFloat","toFixed","slice","ScrollLimit","scrollSnaps","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","ScrollSnaps","alignment","containerRect","slideRects","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","rect","g","SlideRegistry","containSnaps","slideIndexes","slideRegistry","createSlideRegistry","groupedSlideIndexes","doNotContain","group","groups","range","ScrollTarget","targetVector","minDistance","distances","findTargetSnap","ascDiffsToSnaps","shortcut","d1","d2","targets","matchingTargets","t","diffToSnap","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideFocus","root","eventStore","watchFocus","focusListenerOptions","capture","lastTabPressTime","nowTime","Date","getTime","scrollLeft","findIndex","registerTabPress","slide","event","code","Vector1D","initialValue","value","normalizeInput","Translate","translate","x","y","containerStyle","style","to","transform","getAttribute","removeAttribute","SlideLooper","slideSizesWithGaps","roundingSafety","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","slidesInGap","gap","remainingGap","findSlideBounds","findLoopPoints","isEndEdge","slideBounds","initial","altered","boundEdge","loopPoint","slideLocation","canLoop","otherIndexes","shiftLocation","SlidesHandler","watchSlides","mutationObserver","mutations","mutation","MutationObserver","childList","SlidesInView","threshold","intersectionEntryMap","inViewCache","notInViewCache","intersectionObserver","IntersectionObserver","parentElement","createInViewList","inView","list","parseInt","isIntersecting","inViewMatch","notInViewMatch","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","rectB","rectA","edgeA","edgeB","gapA","gapB","chunkSize","currentSize","previousSize","Engine","scrollAxis","startIndex","inViewThreshold","dragHandler","scrollLooper","slideLooper","shouldSettle","withinBounds","hasSettled","interpolatedLocation","engine","startLocation","scrollProgress","slidesInView","slideFocus","resizeHandler","scrollSnapList","slidesHandler","EventHandler","api","getListeners","e","on","cb","off","defaultOptions","OptionsHandler","mergeOptions","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","PluginsHandler","optionsHandler","activePlugins","assign","EmblaCarousel","userOptions","userPlugins","defaultView","pluginsHandler","mediaHandlers","reActivate","optionsBase","globalOptions","pluginList","pluginApis","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","createEngine","optionsWithoutLoop","activate","withOptions","withPlugins","query","offsetParent","selectedScrollSnap","deActivate","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","previousScrollSnap","slidesNotInView","internalEngine","containerNode","slideNodes","setTimeout","useEmblaCarousel","storedOptions","useRef","storedPlugins","setEmblaApi","useState","viewport","setViewport","useCallback","current","useEffect","newEmblaApi"],"sourceRoot":""}